# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#

from nose.tools import assert_equal

from gocardless_pro import errors

from . import helpers

def test_invalid_state_error_message():
    fixture = helpers.load_fixture('invalid_state_error')
    error = errors.InvalidStateError(fixture['error'])
    assert_equal(str(error), 'Mandate is already active or being submitted')

def test_invalid_api_usage_message():
    fixture = helpers.load_fixture('invalid_api_usage_error')
    error = errors.InvalidApiUsageError(fixture['error'])
    assert_equal(str(error), 'Invalid document structure (Root element must be an object.)')

def test_validation_failed_message():
    fixture = helpers.load_fixture('validation_failed_error')
    error = errors.ValidationFailedError(fixture['error'])
    assert_equal(str(error), 'Validation failed (branch_code must be a number, country_code is invalid)')

def test_validation_failed_duplicate_bank_account_message():
    fixture = helpers.load_fixture('validation_failed_duplicate_bank_account_error')
    error = errors.ValidationFailedError(fixture['error'])
    assert_equal(str(error), 'Bank account already exists')

def test_gocardless_error_message():
    fixture = helpers.load_fixture('gocardless_error')
    error = errors.GoCardlessInternalError(fixture['error'])
    assert_equal(str(error), 'Uh-oh!')
