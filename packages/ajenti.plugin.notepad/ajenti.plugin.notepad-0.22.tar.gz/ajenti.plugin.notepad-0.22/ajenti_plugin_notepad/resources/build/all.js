// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('ajenti.notepad', ['core', 'ajenti.filesystem', 'ajenti.ace']);

}).call(this);

// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('core').config(function($routeProvider) {
    $routeProvider.when('/view/notepad', {
      templateUrl: '/notepad:resources/partial/index.html',
      controller: 'NotepadIndexController'
    });
    return $routeProvider.when('/view/notepad/:path*', {
      templateUrl: '/notepad:resources/partial/index.html',
      controller: 'NotepadIndexController'
    });
  });

}).call(this);

// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('ajenti.notepad').controller('NotepadIndexController', function($scope, $routeParams, $location, notify, filesystem, pageTitle, hotkeys, config, gettext) {
    pageTitle.set('');
    $scope.newFile = function() {
      if ($scope.content) {
        if (!confirm(gettext('Current file will be closed. Continue?'))) {
          return;
        }
      }
      $scope.path = null;
      return $scope.content = '';
    };
    $scope.showOpenDialog = function() {
      return $scope.openDialogVisible = true;
    };
    $scope.open = function(path) {
      var url;
      url = "/view/notepad/" + path;
      if ($location.path() !== url) {
        $location.path(url);
        return;
      }
      $scope.openDialogVisible = false;
      $scope.path = path;
      pageTitle.set(path);
      return filesystem.read($scope.path).then(function(content) {
        $scope.content = content;
        return $scope.$broadcast('ace:reload', $scope.path);
      })["catch"](function(err) {
        return notify.error(gettext('Could not open the file'), err.message);
      });
    };
    $scope.save = function() {
      return $scope.saveAs($scope.path);
    };
    $scope.saveAs = function(path) {
      var mustReload;
      $scope.saveDialogVisible = false;
      mustReload = path !== $scope.path;
      $scope.path = path;
      return filesystem.write($scope.path, $scope.content).then(function() {
        notify.success('Saved', $scope.path);
        if (mustReload) {
          return $scope.open($scope.path);
        } else {
          return $scope.$broadcast('ace:reload', $scope.path);
        }
      })["catch"](function(err) {
        return notify.error(gettext('Could not save the file'), err.message);
      });
    };
    $scope.showSaveDialog = function() {
      var t;
      $scope.saveDialogVisible = true;
      if ($scope.path) {
        t = $scope.path.split('/');
        return $scope.saveAsName = t[t.length - 1];
      } else {
        return $scope.saveAsName = 'new.txt';
      }
    };
    config.getUserConfig().then(function(userConfig) {
      var _base, _base1;
      $scope.userConfig = userConfig;
      if ((_base = $scope.userConfig).notepad == null) {
        _base.notepad = {};
      }
      if ((_base1 = $scope.userConfig.notepad).bookmarks == null) {
        _base1.bookmarks = [];
      }
      return $scope.bookmarks = $scope.userConfig.notepad.bookmarks;
    });
    $scope.toggleBookmark = function() {
      var index;
      index = $scope.bookmarks.indexOf($scope.path);
      if (index >= 0) {
        $scope.bookmarks.splice(index, 1);
      } else {
        $scope.bookmarks.push($scope.path);
      }
      return config.setUserConfig($scope.userConfig);
    };
    if ($routeParams.path) {
      $scope.open($routeParams.path);
    } else {
      $scope.newFile();
    }
    return hotkeys.on($scope, function(key, event) {
      if (key === 'O' && event.ctrlKey) {
        $scope.showOpenDialog();
        return true;
      }
      if (key === 'S' && event.ctrlKey) {
        if ($scope.path && !event.shiftKey) {
          $scope.save();
        } else {
          $scope.showSaveDialog();
        }
        return true;
      }
      if (key === 'N' && event.ctrlKey) {
        $scope.newFile();
        return true;
      }
      return false;
    });
  });

}).call(this);

