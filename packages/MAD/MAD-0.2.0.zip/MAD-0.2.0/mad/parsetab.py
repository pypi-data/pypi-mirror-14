
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '31A0824037EF8C61D07AD2158A1E2694'
    
_lr_action_items = {'$end':([2,5,16,],[0,-37,-38,]),'SLASH':([3,],[4,]),'OPEN_CURLY_BRACKET':([5,],[6,]),'COMMA':([7,8,10,17,19,],[-41,-42,14,-43,-44,]),'COLON':([9,11,],[13,15,]),'QUERY':([0,],[1,]),'IDENTIFIER':([1,4,],[3,5,]),'NUMBER':([13,15,],[17,19,]),'TIMEOUT':([6,14,],[9,9,]),'CLOSE_CURLY_BRACKET':([7,8,10,12,17,18,19,],[-41,-42,-40,16,-43,-39,-44,]),'PRIORITY':([6,14,],[11,11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'timeout':([6,14,],[7,7,]),'query_option':([6,14,],[10,10,]),'query_option_list':([6,14,],[12,18,]),'query':([0,],[2,]),'priority':([6,14,],[8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('unit -> definition_list','unit',1,'p_unit','parsing.py',116),
  ('definition_list -> definition definition_list','definition_list',2,'p_definition_list','parsing.py',123),
  ('definition_list -> definition','definition_list',1,'p_definition_list','parsing.py',124),
  ('definition -> define_service','definition',1,'p_definition','parsing.py',136),
  ('definition -> define_client','definition',1,'p_definition','parsing.py',137),
  ('define_service -> SERVICE IDENTIFIER OPEN_CURLY_BRACKET settings operation_list CLOSE_CURLY_BRACKET','define_service',6,'p_define_service','parsing.py',144),
  ('define_service -> SERVICE IDENTIFIER OPEN_CURLY_BRACKET operation_list CLOSE_CURLY_BRACKET','define_service',5,'p_define_service','parsing.py',145),
  ('settings -> SETTINGS OPEN_CURLY_BRACKET setting_list CLOSE_CURLY_BRACKET','settings',4,'p_settings','parsing.py',156),
  ('setting_list -> setting setting_list','setting_list',2,'p_setting_list','parsing.py',163),
  ('setting_list -> setting','setting_list',1,'p_setting_list','parsing.py',164),
  ('setting -> queue','setting',1,'p_setting','parsing.py',176),
  ('setting -> autoscaling','setting',1,'p_setting','parsing.py',177),
  ('setting -> throttling','setting',1,'p_setting','parsing.py',178),
  ('queue -> QUEUE COLON LIFO','queue',3,'p_queue','parsing.py',185),
  ('queue -> QUEUE COLON FIFO','queue',3,'p_queue','parsing.py',186),
  ('throttling -> THROTTLING COLON NONE','throttling',3,'p_throttling','parsing.py',200),
  ('throttling -> THROTTLING COLON TAIL_DROP OPEN_BRACKET NUMBER CLOSE_BRACKET','throttling',6,'p_throttling','parsing.py',201),
  ('autoscaling -> AUTOSCALING OPEN_CURLY_BRACKET autoscaling_setting_list CLOSE_CURLY_BRACKET','autoscaling',4,'p_autoscaling','parsing.py',211),
  ('autoscaling_setting_list -> autoscaling_setting autoscaling_setting_list','autoscaling_setting_list',2,'p_autoscaling_setting_list','parsing.py',218),
  ('autoscaling_setting_list -> autoscaling_setting','autoscaling_setting_list',1,'p_autoscaling_setting_list','parsing.py',219),
  ('autoscaling_setting -> PERIOD COLON NUMBER','autoscaling_setting',3,'p_autoscaling_setting','parsing.py',231),
  ('autoscaling_setting -> LIMITS COLON OPEN_SQUARE_BRACKET NUMBER COMMA NUMBER CLOSE_SQUARE_BRACKET','autoscaling_setting',7,'p_autoscaling_setting','parsing.py',232),
  ('operation_list -> define_operation operation_list','operation_list',2,'p_operation_list','parsing.py',244),
  ('operation_list -> define_operation','operation_list',1,'p_operation_list','parsing.py',245),
  ('define_client -> CLIENT IDENTIFIER OPEN_CURLY_BRACKET EVERY NUMBER OPEN_CURLY_BRACKET action_list CLOSE_CURLY_BRACKET CLOSE_CURLY_BRACKET','define_client',9,'p_define_client','parsing.py',257),
  ('define_operation -> OPERATION IDENTIFIER OPEN_CURLY_BRACKET action_list CLOSE_CURLY_BRACKET','define_operation',5,'p_define_operation','parsing.py',264),
  ('action_list -> action action_list','action_list',2,'p_action_list','parsing.py',271),
  ('action_list -> action','action_list',1,'p_action_list','parsing.py',272),
  ('action -> invoke','action',1,'p_action','parsing.py',284),
  ('action -> query','action',1,'p_action','parsing.py',285),
  ('action -> think','action',1,'p_action','parsing.py',286),
  ('action -> fail','action',1,'p_action','parsing.py',287),
  ('action -> retry','action',1,'p_action','parsing.py',288),
  ('think -> THINK NUMBER','think',2,'p_think','parsing.py',295),
  ('fail -> FAIL NUMBER','fail',2,'p_fail','parsing.py',302),
  ('fail -> FAIL','fail',1,'p_fail','parsing.py',303),
  ('query -> QUERY IDENTIFIER SLASH IDENTIFIER','query',4,'p_query','parsing.py',312),
  ('query -> QUERY IDENTIFIER SLASH IDENTIFIER OPEN_CURLY_BRACKET query_option_list CLOSE_CURLY_BRACKET','query',7,'p_query','parsing.py',313),
  ('query_option_list -> query_option COMMA query_option_list','query_option_list',3,'p_query_option_list','parsing.py',323),
  ('query_option_list -> query_option','query_option_list',1,'p_query_option_list','parsing.py',324),
  ('query_option -> timeout','query_option',1,'p_query_option','parsing.py',336),
  ('query_option -> priority','query_option',1,'p_query_option','parsing.py',337),
  ('timeout -> TIMEOUT COLON NUMBER','timeout',3,'p_timeout','parsing.py',344),
  ('priority -> PRIORITY COLON NUMBER','priority',3,'p_priority','parsing.py',351),
  ('invoke -> INVOKE IDENTIFIER SLASH IDENTIFIER','invoke',4,'p_invoke','parsing.py',358),
  ('invoke -> INVOKE IDENTIFIER SLASH IDENTIFIER OPEN_CURLY_BRACKET PRIORITY COLON NUMBER CLOSE_CURLY_BRACKET','invoke',9,'p_invoke','parsing.py',359),
  ('retry -> RETRY OPEN_CURLY_BRACKET action_list CLOSE_CURLY_BRACKET','retry',4,'p_retry','parsing.py',369),
  ('retry -> RETRY OPEN_BRACKET retry_option_list CLOSE_BRACKET OPEN_CURLY_BRACKET action_list CLOSE_CURLY_BRACKET','retry',7,'p_retry','parsing.py',370),
  ('retry_option_list -> retry_option COMMA retry_option_list','retry_option_list',3,'p_retry_option_list','parsing.py',382),
  ('retry_option_list -> retry_option','retry_option_list',1,'p_retry_option_list','parsing.py',383),
  ('retry_option -> LIMIT COLON NUMBER','retry_option',3,'p_retry_option','parsing.py',395),
  ('retry_option -> DELAY COLON IDENTIFIER OPEN_BRACKET NUMBER CLOSE_BRACKET','retry_option',6,'p_retry_option','parsing.py',396),
]
