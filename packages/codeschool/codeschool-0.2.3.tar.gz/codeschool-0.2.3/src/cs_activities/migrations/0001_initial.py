# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-03-07 00:39
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cs_questions', '0002_question_discipline'),
        ('cs_auth', '0002_auto_20160306_2312'),
        ('cs_courses', '0002_auto_20160307_0039'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='start')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='end')),
                ('status', model_utils.fields.StatusField(choices=[('active', 'active'), ('pending', 'pending'), ('expired', 'expired')], default='active', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('grade', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Percentage of maximum grade')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('pending', 'pending'), ('graded', 'graded')], default='pending', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GenericActivity',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cs_activities.Activity')),
                ('name', models.CharField(max_length=200)),
                ('short_description', models.CharField(max_length=140)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('cs_activities.activity',),
        ),
        migrations.CreateModel(
            name='QuestionActivity',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cs_activities.Activity')),
            ],
            options={
                'abstract': False,
            },
            bases=('cs_activities.activity',),
        ),
        migrations.AddField(
            model_name='response',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cs_activities.Activity'),
        ),
        migrations.AddField(
            model_name='response',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cs_auth.UserGroup'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='response',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cs_activities.Response'),
        ),
        migrations.AddField(
            model_name='activity',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='cs_courses.Course'),
        ),
        migrations.AddField(
            model_name='activity',
            name='group',
            field=models.ForeignKey(blank=True, help_text='Group of students that this activity is assigned to. Leave blank to assign to the whole classroom.', null=True, on_delete=django.db.models.deletion.CASCADE, to='cs_auth.UserGroup', verbose_name='Group of students'),
        ),
        migrations.CreateModel(
            name='CodingActivity',
            fields=[
                ('questionactivity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cs_activities.QuestionActivity')),
                ('answer_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cs_questions.CodeIoAnswerKey')),
            ],
            options={
                'abstract': False,
            },
            bases=('cs_activities.questionactivity',),
        ),
        migrations.AddField(
            model_name='questionactivity',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cs_questions.Question'),
        ),
    ]
