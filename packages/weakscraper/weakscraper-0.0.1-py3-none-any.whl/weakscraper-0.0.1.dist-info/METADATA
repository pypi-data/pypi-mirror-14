Metadata-Version: 2.0
Name: weakscraper
Version: 0.0.1
Summary: HTML scraper with templates
Home-page: https://github.com/michelbl/weakscraper
Author: Michel Blancard
Author-email: UNKNOWN
License: MIT
Keywords: parser scraper HTML template
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3

# weakscraper
HTML scraper with templates

## Description

Most HTML pages are generated using templates. Why not use templates too for scraping HTML pages? As for a template language, let's use HTML plus a few keywords. That way, the workflow with `weakscraper` is the following :
* Get the source of a HTML page you want to scrap.
* Using a few keywords, edit the HTML to select which information is of interest and which parts to discard.
* If complicated processing is required, write additional callbacks.
* Run `weakscraper` on the template and on the HTML.


## Pros
* Observes the [rule of least power](https://en.wikipedia.org/wiki/Rule_of_least_power). A declarative language helps to focus on *what* to keep. *How* the information is scrapped is the job of the library.

## Cons

## Examples

## How it works ?

## License

MIT (http://www.opensource.org/licenses/mit-license.php)


