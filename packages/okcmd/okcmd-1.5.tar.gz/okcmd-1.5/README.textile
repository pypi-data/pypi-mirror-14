h1. "OkCupid-Message-Downloader":https://github.com/lehrblogger/OkCupid-Message-Downloader (@okcmd@)

OKCMD is a tool for downloading your sent and received "OkCupid":https://www.okcupid.com/ messages to a text file.



h2. Installation

OKCMD requires @python2.7@.

Install OKCMD from "PyPI":https://pypi.python.org/pypi with "@pip@":https://pip.pypa.io/ (alternatively "@easy_install@":https://pythonhosted.org/setuptools/easy_install.html). This will add @okcmd@ to your @PATH@ by default.

bc. pip install okcmd


h2. Usage

bc. okcmd -u your_username -p your_password -f 'message_output_file.txt'



h3. Auto login links instead of a password

@--autologin@ can be used instead of @--password@. Supply it with a link that will automatically log you in to OkCupid; you can find these links in emails sent to you from Okcupid. One example is the logotype in top/new matches emails - right click and choose "copy link", then use it with the @--autologin@ argument. Usage requires that _auto login from emails_ is enabled; check your privacy settings on the OKCupid web site.


h3. "Thunderbird":https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0CB4QFjAAahUKEwiHy4LIhsnHAhVBCCwKHQPvBEM&url=https%3A%2F%2Fwww.mozilla.org%2Fthunderbird%2F&ei=_-XeVcfPKcGQsAGD3pOYBA&usg=AFQjCNEXEPki7BAZim9dQdWY25jJg3CfFA&sig2=VmUtjGSPVtUbyx8YQOWh9w&cad=rja

You can add the @-m@ or @-t@ flag to get the output as a possibly-MBOX-compatible file rather than the default plaintext format, but the feature hasn't been thoroughly tested. Put the file in a @Local@ folder, and hopefully Thunderbird (or pine/alpine/realpine) can read/process it from there. Please report back if it works or if there are any issues!

h3. Directory output

By specifying @--directory@ instead of @--filename@, the chats will be sorted into files named @username.txt@ according to your conversation partner.

h3. Debugging

@--debug@ only downloads the first page of messages, but shows _a lot_ more output including HTML for the entire page and each message. You probably want to pipe the output to a separate file: @okcmd --debug --username ... &> debug.txt@



h2. The @okcmd@ shell script (advanced)

As an alternative to using the PyPI package, there is an @okcmd@ shell script/wrapper. Use @git@ to clone the OKCMD repository and use the @okcmd@ shell script in the repository root. The @okcmd@ command won't be automatically added to your @PATH@.

The @okcmd@ shell script wraps execution in a local virtual environment installed using "@virtualenv@":https://virtualenv.pypa.io and "@pip@":https://pip.pypa.io/ (both are required dependencies). After version upgrades of dependencies or tools there might be unforeseen problems or bugs; try deleting the folder @.okcmd-virtualenv/@ to reinstall the virtual environment.



h2. History

The time has come to deactivate my OkCupid account, but I was slightly unhappy about leaving all my messages in a locked silo, as they contained a nontrivial amount of emotionally significant correspondence. I googled around a bit for scripts that other people had written to do download them, and found one "written for Greasemonkey":http://mkay.saverpigeeks.com/FetchOK.xhtml and another "written in Java":http://mkay.saverpigeeks.com/FetchOK.xhtml, but neither seemed to be recent enough to be able to handle the current OkC HTML. I _strongly_ prefer the "BeautifulSoup":http://www.crummy.com/software/BeautifulSoup/ Python library for dealing with HTML, so decided to write my own instead of modifying either of those.

I probably won't update OKCMD as the site updates, but the project is still active with the help of "OKCMD's contributors":https://github.com/lehrblogger/OkCupid-Message-Downloader/graphs/contributors :)



h2. Related projects

If you are interested in this project, chances are that the following project(s) might also be worth a look.

* "OKCupid-questions-downloader":https://github.com/4Christopher/OKCupid-questions-downloader



---

"OkCupid-Message-Downloader":https://github.com/lehrblogger/OkCupid-Message-Downloader &copy; 2011, 2012, 2013, 2014, 2015 "Steven Lehrburger":http://lehrblogger.com/ ("@lehrblogger":https://github.com/lehrblogger). Released under the MIT license.
