#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Cryptoshop Strong file encryption.
# Encrypt and decrypt file in GCM mode with AES, Serpent or Twofish as secure as possible.
# Copyright(C) 2016 CORRAIRE Fabrice. antidote1911@gmail.com

# ############################################################################
# This file is part of Cryptoshop-GUI (full Qt5 gui for Cryptoshop).
#
#    Cryptoshop is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    Cryptoshop is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Cryptoshop.  If not, see <http://www.gnu.org/licenses/>.
# ############################################################################

import argon2
from ._settings import __argon2_memory_cost__, __argon2_parallelism__, __argon2_timing_cost__


def calc_derivation(passphrase, salt):
    """
    Calculate a 32 bytes key derivation with Argon2.
    :param passphrase: A string of any length specified by user.
    :param salt: 512 bits generated by Botan Random Number Generator.
    :return: a 32 bytes keys.
    """
    argonhash = argon2.low_level.hash_secret_raw((str.encode(passphrase)), salt=salt, hash_len=32,
                                                 time_cost=__argon2_timing_cost__, memory_cost=__argon2_memory_cost__,
                                                 parallelism=__argon2_parallelism__, type=argon2.low_level.Type.I)
    return argonhash
