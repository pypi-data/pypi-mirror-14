Metadata-Version: 1.0
Name: messaging-client
Version: 0.0.5
Summary: A simple message transport application and library.
Home-page: https://github.com/mjalas/messaging-client
Author: Mats Jalas
Author-email: mats.jalas@gmail.com
License: MIT
Description: Messaging client
        ================
        
        |PyPI version| |Build Status| |Coverage Status| |Code Health|
        
        Simple network messaging client application that can send messages
        stored in a file to a remote host.
        
        Installation
        ------------
        
        There are currently two different ways of installing the application.
        
        Through pip:
        
        ::
        
            pip install messaging-client
        
        Manually:
        
        ::
        
            git clone https://github.com/mjalas/messaging-client.git
            cd message-client
            python setup.py install
        
        Usage
        -----
        
        The messaging-client sends messages by default to localhost:8700
        
        To send a message written as a command line argument to:
        
        ::
        
            messaging-client -m <message string>
        
        To send a message written into a file:
        
        ::
        
            messaging-client <message file>
        
        Either remote host address or port number or both can be specified with
        command line options:
        
        ::
        
            messaging-client -h <address> -p <port> <filename>
        
        or
        
        ::
        
            messaging-client -h <address> -p <port> -m <message string>
        
        Setup virtual environment
        -------------------------
        
        To setup a virtual environment after cloning the repository, it is
        easiest to use one of the two creation scripts included in the project.
        The first option is to create the virtual environment with virtualenv:
        
        ::
        
            env_creators/venv_create.sh
        
        The second option is to create the environment with virtualenvwrapper:
        
        ::
        
            env_creators/venvwrapper_create.sh
        
        However, this requires that virtualenvwrappers has been setup (see
        http://docs.python-guide.org/en/latest/dev/virtualenvs/ if not familiar
        with virtualenvwrapper)
        
        .. |PyPI version| image:: https://badge.fury.io/py/messaging-client.svg
           :target: https://badge.fury.io/py/messaging-client
        .. |Build Status| image:: https://travis-ci.org/mjalas/messaging-client.svg?branch=master
           :target: https://travis-ci.org/mjalas/messaging-client
        .. |Coverage Status| image:: https://coveralls.io/repos/github/mjalas/messaging-client/badge.svg?branch=master
           :target: https://coveralls.io/github/mjalas/messaging-client?branch=master
        .. |Code Health| image:: https://landscape.io/github/mjalas/messaging-client/master/landscape.svg?style=flat
           :target: https://landscape.io/github/mjalas/messaging-client/master
        
Keywords: message-transport
Platform: UNKNOWN
