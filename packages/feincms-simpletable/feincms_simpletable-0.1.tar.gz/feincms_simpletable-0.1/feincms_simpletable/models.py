import re

from django import forms
from django.contrib import admin
from django.db import models
from django.template.loader import render_to_string
from django.utils.translation import ugettext_lazy as _


class SimpleTable(models.Model):
    """
    SimpleTable model that converts spreadsheet data to html

    Inherit from SimpleTable if you want your models to contain one specific 
    table from spreadsheet contents

    If you need feincms content type, use SimpleTableContent
    """

    specification_csv = models.TextField(
        _('Spreadsheet data'), # 'Текст таблицы из Excel',
        help_text=_('Paste your spreadsheet data here') ,
        # 'Сюда вставить таблицу из Excel (Ctrl-C, Ctrl-V)',
        # verbose_name=_('Simple Table'),
        blank=True, 
        null=True,
        )

    specification_html = models.TextField(
        _('Table rendered as html'),
        help_text=_('This field is autogenerated, do not modify it!'), # 'Это поле генерируется автоматически, не трогать!',
        # verbose_name=_('Table'),
        blank=True,
        null=True,
        )

    class Meta:
        abstract = True
        verbose_name = _('Simple Table')
        verbose_name_plural = _('Simple Tables')

    def parse_table(self, *args, **kwargs):
        try:
            rows = self.specification_csv.split('\n')
            thead_cols = rows[0].split('\t')
            tbody_rows = rows[1:]

            # original table is malformed
            if not tbody_rows or not thead_cols:
                raise ValueError

            # filter any empty or whitespace-filled rows
            tbody_rows = [x for x in tbody_rows if not re.match('^\s*$', x)]

            # split each row string into a list of columns
            for i,v in enumerate(tbody_rows):
                tbody_rows[i] = tbody_rows[i].split('\t')

            self.specification_html = render_to_string(
                'content/simpletable/default.html', {
                    'tbody_rows': tbody_rows,
                    'thead_cols': thead_cols,
                    },
                context_instance=kwargs.get('context')
                )

        # return empty string in case of failure
        except ValueError:
            self.specification_html = ''


class SimpleTableContent(SimpleTable):
    """
    SimpleTableContent model that converts spreadsheet data to html

    This model is intended to be used as feincms content type. Add as many
    of these as you need to your feincms pages
    """

    class Meta:
        abstract = True
        verbose_name = _('Simple Table')
        verbose_name_plural = _('Simple Tables')

    def save(self, *args, **kwargs):
        SimpleTable.parse_table(self, *args, **kwargs)
        super(SimpleTableContent, self).save(*args, **kwargs)
    save.alters_data = True

    def render(self, **kwargs):
        return self.specification_html
