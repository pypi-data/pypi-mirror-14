# -*- coding: utf-8 -*-
# This file has been autogenerated by the pywayland scanner

# Copyright © 2008-2011 Kristian Høgsberg
# Copyright © 2010-2011 Intel Corporation
# Copyright © 2012-2013 Collabora, Ltd.
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice (including the
# next paragraph) shall be included in all copies or substantial
# portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

from pywayland.interface import Interface
from .shellsurface import ShellSurface
from .surface import Surface

import enum


class Shell(Interface):
    """Create desktop-style surfaces

    This interface is implemented by servers that provide desktop-style user
    interfaces.

    It allows clients to associate a
    :class:`~pywayland.protocol.wayland.shellsurface.ShellSurface` with a basic
    surface.
    """
    name = "wl_shell"
    version = 1

    error = enum.Enum("error", {
        "role": 0,
    })


@Shell.request("no", [ShellSurface, Surface])
def get_shell_surface(self, surface):
    """Create a shell surface from a surface

    Create a shell surface for an existing surface. This gives the
    :class:`~pywayland.protocol.wayland.surface.Surface` the role of a shell
    surface. If the :class:`~pywayland.protocol.wayland.surface.Surface`
    already has another role, it raises a protocol error.

    Only one shell surface can be associated with a given surface.

    :param surface:
    :type surface: :class:`~pywayland.protocol.wayland.surface.Surface`
    :returns: :class:`~pywayland.protocol.wayland.shellsurface.ShellSurface`
    """
    id = self._marshal_constructor(0, ShellSurface, surface)
    return id


Shell._gen_c()
