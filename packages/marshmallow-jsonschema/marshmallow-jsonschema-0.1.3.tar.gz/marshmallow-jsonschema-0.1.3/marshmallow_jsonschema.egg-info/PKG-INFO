Metadata-Version: 1.1
Name: marshmallow-jsonschema
Version: 0.1.3
Summary: JSON Schema Draft v4 (http://json-schema.org/) formatting with marshmallow
Home-page: https://github.com/fuhrysteve/marshmallow-jsonschema
Author: Stephen Fuhry
Author-email: fuhrysteve@gmail.com
License: The MIT License (MIT)

Copyright (c) [year] [fullname]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Description: ## marshmallow-jsonschema: JSON Schema formatting with marshmallow
        
        [![Build Status](https://travis-ci.org/fuhrysteve/marshmallow-jsonschema.svg?branch=master)](https://travis-ci.org/fuhrysteve/marshmallow-jsonschema)
        
         marshmallow-jsonschema translates marshmallow schemas into
         JSON Schema Draft v4 compliant jsonschema. See http://json-schema.org/
        
        ### Why would I want my schema translated to JSON?
        
        What are the use cases for this? Let's say you have a
        marshmallow schema in python, but you want to render your
        schema as a form in another system (for example: a web browser
        or mobile device).
        
        ### Some Client tools can render forms using JSON Schema
        
        * https://github.com/jdorn/json-editor
        * https://github.com/ulion/jsonform
        
        
        ### Example usage
        
        ```python
        from marshmallow_jsonschema import JSONSchema
        from tests import UserSchema
        
        json_schema = JSONSchema()
        user_schema = UserSchema()
        user_schema.dump(user_schema).data
        ```
        Yields:
        ```python
        {'properties': {'addresses': {'items': {'properties': {'city': {'title': 'city',
                                                                        'type': 'string'},
                                                               'floor': {'title': 'floor',
                                                                         'type': 'string'},
                                                               'id': {'default': 'no-id',
                                                                      'title': 'id',
                                                                      'type': 'string'},
                                                               'number': {'title': 'number',
                                                                          'type': 'string'},
                                                               'street': {'title': 'street',
                                                                          'type': 'string'}},
                                                'required': ['city',
                                                             'number',
                                                             'street'],
                                                'type': 'object'},
                                      'type': ['array', 'null']},
                        'age': {'format': 'float', 'title': 'age', 'type': 'number'},
                        'balance': {'format': 'decimal',
                                    'title': 'balance',
                                    'type': 'number'},
                        'birthdate': {'format': 'date',
                                      'title': 'birthdate',
                                      'type': 'string'},
                        'created': {'format': 'date-time',
                                    'title': 'created',
                                    'type': 'string'},
                        'created_formatted': {'format': 'date-time',
                                              'title': 'created',
                                              'type': 'string'},
                        'created_iso': {'format': 'date-time',
                                        'title': 'created',
                                        'type': 'string'},
                        'email': {'title': 'email', 'type': 'string'},
                        'finger_count': {'format': 'integer',
                                         'title': 'finger_count',
                                         'type': 'number'},
                        'github': {'properties': {'uri': {'title': 'uri',
                                                          'type': 'string'}},
                                   'required': ['uri'],
                                   'type': 'object'},
                        'hair_colors': {'title': 'hair_colors', 'type': 'array'},
                        'homepage': {'title': 'homepage', 'type': 'string'},
                        'id': {'default': 'no-id', 'title': 'id', 'type': 'string'},
                        'name': {'title': 'name', 'type': 'string'},
                        'registered': {'title': 'registered', 'type': 'boolean'},
                        'sex': {'title': 'sex', 'type': 'string'},
                        'sex_choices': {'title': 'sex_choices', 'type': 'array'},
                        'since_created': {'title': 'since_created', 'type': 'string'},
                        'species': {'title': 'SPECIES', 'type': 'string'},
                        'time_registered': {'format': 'time',
                                            'title': 'time_registered',
                                            'type': 'string'},
                        'uid': {'format': 'uuid', 'title': 'uid', 'type': 'string'},
                        'updated': {'format': 'date-time',
                                    'title': 'updated',
                                    'type': 'string'},
                        'updated_local': {'format': 'date-time',
                                          'title': 'updated',
                                          'type': 'string'},
                        'various_data': {'title': 'various_data', 'type': 'object'}},
         'required': ['name'],
         'type': 'object'}
        ```
        
Keywords: marshmallow-jsonschema marshmallow schema serialization jsonschema validation
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
