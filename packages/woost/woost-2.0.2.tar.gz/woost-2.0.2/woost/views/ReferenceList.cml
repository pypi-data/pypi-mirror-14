<?xml version="1.0" encoding="utf-8"?>
<?py
from cocktail import schema
from woost.models import (
    get_current_user,
    Item,
    ReadPermission,
    ReadMemberPermission
)
?>

<py:cocktail.html.DropdownPanel
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    item = None

    def _iter_references(self, obj):
        for member in obj.__class__.members().itervalues():
            if (
                isinstance(member, schema.RelationMember)
                and member.related_end
                and member.related_end.visible_in_reference_list
                and issubclass(member.related_type, Item)
                and member.related_type.visible
                and not member.integral
            ):
                value = obj.get(member)
                if value:
                    if isinstance(member, schema.Reference):
                        if self._should_include_reference(value, member.related_end):
                            yield value, member.related_end
                    elif isinstance(member, schema.Collection):
                        for item in value:
                            if self._should_include_reference(item, member.related_end):
                                yield item, member.related_end

    def _should_include_reference(self, referrer, relation):
        user = get_current_user()
        return (
            relation.visible
            and user.has_permission(ReadPermission, target = referrer)
            and user.has_permission(ReadMemberPermission, member = relation)
        )
    ?>

    <py:ready>
        <?py
        self.references = list(self._iter_references(self.item))

        if not self.references:
            element.visible = False
        ?>
    </py:ready>

    <py:with py:element="self.label">
        @{translations("woost.views.ReferenceList.summary", count = len(self.references))}
    </py:with>

    <py:with py:element="self.panel">
        <table py:id="references_table">
            <py:ready>
                <py:new
                    py:element="self.create_reference_entry(referrer, relation)"
                    py:for="referrer, relation in self.references"/>
            </py:ready>
        </table>
    </py:with>

    <tr py:def="reference_entry" py:args="referrer, relation">
        <td py:local_id="referrer_cell">
            <py:woost.views.ContentLink
                py:local_id="referrer"
                py:icon_visible="${True}"
                py:item="${referrer}"/>
        </td>
        <td py:local_id="relation_cell">${translations(relation)}</td>
    </tr>

</py:cocktail.html.DropdownPanel>

