<?xml version="1.0" encoding="utf-8"?>
<?py
from woost import app
from woost.models import Role
from woost.extensions.translationworkflow.request import TranslationWorkflowRequest
?>

<py:overlay
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates"
    py:class="woost.views.ContentView">

    <py:ready>
        <?py
        translators = Role.get_instance(
            qname = "woost.extensions.translationworkflow.roles.translators"
        )
        self._user_is_translator = (
            translators is not None
            and translators in app.user.roles
        )
        ?>
    </py:ready>

    <py:with py:element="self.content_type_selector">
        <py:binding>
            <?py
            if self._user_is_translator:
                element.visible = False
            ?>
        </py:binding>
    </py:with>

    <py:with py:element="self.languages_dropdown">
        <py:binding>
            <?py
            if self._user_is_translator:
                element.visible = False
            ?>
        </py:binding>
    </py:with>

    <py:with py:def="tab_strip_entry" py:args="tab">
        <?py
        if issubclass(self.user_collection.type, TranslationWorkflowRequest) and tab.state:
            element.tab_state_sign = self.create_tab_state_sign(tab.state)
            element.insert(0, element.tab_state_sign)
        ?>
    </py:with>

    <py:woost.extensions.translationworkflow.TranslationWorkflowStateSign
        py:def="tab_state_sign"
        py:args="state"
        py:value="${state}"/>

</py:overlay>

