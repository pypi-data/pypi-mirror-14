<?xml version="1.0" encoding="utf-8"?>
<?py
from cocktail.controllers import context
from woost.models import Configuration, Block
?>

<py:woost.views.ItemCard
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    item = None

    def get_item_path(self, item):
        paths = item.find_paths()

        for path in paths:
            if path[0][0] is Configuration.instance:
                return path

        if paths:
            return paths[0]

    # Make the view usable in data binding
    def _get_value(self):
        return self.item

    def _set_value(self, value):
        self.item = value

    value = property(_get_value, _set_value)
    ?>

    <py:ready>
        <?py
        self._cms = context["cms"]
        ?>
    </py:ready>

    <li py:def="item_path_step" py:args="path, index, step">
        <a>
            <?py
            root = path[0][0]
            container = step[0]
            edit_blocks_uri = self._cms.contextual_uri("blocks", root.id)

            if isinstance(container, Block):
                edit_blocks_uri += "#block" + str(container.id)
            else:
                edit_blocks_uri += "#block" + str(self.item.id)

            element["href"] = edit_blocks_uri
            ?>
            ${translations(container)}
        </a>
    </li>

</py:woost.views.ItemCard>

