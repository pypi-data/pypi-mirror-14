<?xml version="1.0" encoding="utf-8"?>

<?py
from cocktail.translations import translations
from woost.models.publishable import Publishable
?>

<div
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    schema = None
    errors = ()
    data = None
    ?>

    <?py
    self.add_resource("/resources/scripts/LoginFormView.js")
    ?>

    <py:cocktail.html.List
        py:id="error_box"
        py:collapsible="${True}"
        py:items="@{[translations(error) for error in self.errors]}"/>

    <py:cocktail.html.Form
        py:id="login_form"
        method="post"
        py:schema="@{self.schema}"
        py:errors="@{self.errors}"
        py:data="@{self.data}">
        <?py
        @extend(element)
        def create_control(login_form, obj, member):
            control = call_base(obj, member)
            if member.name == "user" and control.tag == "input":
                control["autofocus"] = True
            return control
        ?>
    </py:cocktail.html.Form>

    <py:with py:element="self.login_form.submit_button" name="authenticate">
        <?py element.empty() ?>
        ${translations("woost.views.LoginForm.submit_button")}
    </py:with>

    <a py:id="forgot_password_link" py:before="self.login_form.submit_button">
        <py:ready>
            <?py
            password_change_page = Publishable.get_instance(
                qname="woost.password_change_page"
            )
            if password_change_page \
            and password_change_page.is_accessible():
                element["href"] = password_change_page.get_uri()
            else:
                element.visible = False
            ?>
        </py:ready>
        ${translations("woost.views.LoginForm.forgot_password_link")}
    </a>
</div>

