<?xml version="1.0" encoding="utf-8"?>

<?py
from cocktail.html.datadisplay import MULTIPLE_SELECTION
?>

<py:woost.views.BackOfficeLayout
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    user_collection = None
    available_languages = ()
    visible_languages = ()
    available_content_views = ()
    content_view = None
    member = None
    selection_mode = MULTIPLE_SELECTION
    search_expanded = False
    ?>

    <?py
    self.set_client_param("dblclick_target", ".buttons .select_button")
    self.action_context.add("selector")
    ?>

    <py:ready>
        <?py
        if self.is_client_side_selector:
            self.page_title = translations("woost.views.BackOfficeItemSelectorView title", type = self.user_collection.type)
        ?>
    </py:ready>

    <py:ready>
        <?py
        self.set_client_param("dblclick_target", ".buttons .select_button")
        ?>

        <py:with py:element="self.user_collection.content_view"
            py:parent="self.body"
            py:cms="${self.cms}"
            py:backoffice="${self.backoffice}"
            py:user_collection="${self.user_collection}"
            py:available_languages="${self.available_languages}"
            py:root_content_type="${self.root_content_type}"
            py:selection_mode="${self.selection_mode}"
            py:edit_stack="${self.edit_stack}"
            py:search_expanded="${self.search_expanded}"
            py:activation_control="[data-woost-action='select']">

            <?py
            element.action_context.update(self.action_context)
            ?>

            <!-- Propagate the selection context when changing the active type -->
            <py:with
                py:element="element.content_type_selector">

                <py:with py:def="tree">
                    <?py
                    @refine(tree)
                    def get_item_url(tree, content_type):
                        url = "?type=" + content_type.full_name
                        if self.edit_stack:
                            url += "&edit_stack=" + self.edit_stack.to_param()
                        return url
                    ?>
                </py:with>

            </py:with>
        </py:with>
    </py:ready>

</py:woost.views.BackOfficeLayout>
