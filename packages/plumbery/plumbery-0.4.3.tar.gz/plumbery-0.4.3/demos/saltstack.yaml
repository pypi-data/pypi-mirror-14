---

information:
  - "This fittings plan deploys Salt and some minions"

defaults:

  cloud-config: # default for all nodes created by plumbery

    ssh_keys: # generated randomly, and used on subsequent invocations
      rsa_private: |
        {{ key.rsa_private }}
      rsa_public: "{{ key.rsa_public }}"

    users:
      - default

      - name: ubuntu
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ key.rsa_public }}"
          - "{{ local.rsa_public }}"

      - name: root
        ssh-authorized-keys:
          - "{{ key.rsa_public }}"
          - "{{ local.rsa_public }}"

    disable_root: false

    ssh_pwauth: false

---
locationId: AU10
regionId: dd-au

blueprints:

  - queen:

      domain: &domain
        name: SaltFox
        description: "Demonstration of Salt with multiple minions"
        ipv4: auto

      ethernet: &ethernet
        name: SaltNetwork
        subnet: 10.0.0.0

      nodes:

        - salt:

            description: "#salt #ubuntu"

            information:
              - "a Salt server"
              - "$ ssh ubuntu@{{ node.public }}"

            appliance: 'Ubuntu 14'

            cpu: 2
            memory: 3

            glue:
              - internet 22

            monitoring: essentials

            cloud-config:

              hostname: "{{ node.name }}"

              apt_sources:
                - source: "ppa:saltstack/salt"

              packages:
                - ntp
                - salt-master
                - salt-minion
                - salt-ssh
                - salt-syndic

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ node.private }}/ {next}
                    /^{{ queen.ipv6 }}/ {next}
                    /^{{ dashboard.ipv6 }}/ {next}
                    /^{{ dd-na::NA9::bee-NA9.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ node.private }}    {{ node.name }}"
                     print "{{ queen.ipv6 }}    queen"
                     print "{{ dashboard.ipv6 }}    dashboard"
                     print "{{ dd-na::NA9::bee-NA9.ipv6 }}    bee-NA9"
                    }

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

                - echo "===== Installing swarming software"
                - cd /home/ubuntu
                - git clone https://github.com/bernard357/swarming.git
                - cd swarming
                - pip install -r requirements.txt
