Main Menu:
  - All Accounts:
    - EC2 Uptime of 30 days or more:
      - eval "scripts/ec2_uptime_30_days_or_more.py"
    - Check Volumes Have A Specific Tag:
      - eval 'scripts/volumes_have_a_specific_tag.py'
    - Detached Volumes with age of 30 days or more:
      - eval 'scripts/detached_volumes_30_days_or_more.py'
  - General/Other:
    - Availability Zones:
        - eval 'scripts/list_availability_zones.py'
    - List Resources:
        - eval 'scripts/list_resources.py'
    - List VPCs For All Accounts:
        - eval 'scripts/list_all_vpcs.py'
    - List Subnets For All Accounts:
        - eval 'scripts/list_all_subnets.py'
    - List Account Attributes:
        - eval 'scripts/list_account_attributes.py'
    - Public DNS Names:
        - eval 'scripts/list_public_dns_names.py'
    - Public IPs:
        - eval 'scripts/list_public_ips.py'
    - Private IPs:
        - eval 'scripts/list_private_ips.py'
    - Miscellaneous:
      - Determine if RDS Snapshot Exists:
        - eval 'scripts/determine_if_rds_snapshot_exists.py'
      - Determine if RDS Snapshot Is Shared:
        - eval 'scripts/determine_if_rds_snapshot_is_shared.py'
      - Get the Private IP For An EC2 Instance:
        - eval 'scripts/get_private_ip_for_ec2_instance.py'
      - Determine if EC2 Instance Exists:
        - eval 'scripts/determine_if_ec2_instance_exists.py'
      - Get RDS Security Group:
        - eval 'scripts/determine_rds_security_group.py'
      - Change RDS Security Group:
        - eval 'scripts/change_rds_security_group.py'
      - Copy A Shared RDS Snapshot:
        - eval 'scripts/copy_shared_rds_snapshot.py'
  - API Gateway:
    - Create REST API:
        - eval "scripts/create_rest_api.py"
    - Delete REST API:
        - eval "scripts/delete_rest_api.py"
    - List REST APIs:
        - eval "scripts/list_rest_apis.py"
  - Cloud Formation:
    - Create CF Stack:
        - eval 'scripts/create_cf_stack.py'
    - Get Cloud Formation Template for Stack:
        - eval 'scripts/get_cf_template_for_stack.py'
    - List Undeleted Stack:
        - eval 'scripts/list_undeleted_stack.py'
  - Cloud Watch:
    - Create Alarm:
        - eval 'scripts/create_cloud_watch_alarm.py'
    - Delete Alarm:
        - eval 'scripts/delete_cloud_watch_alarm.py'
    - Disable Alarm:
        - eval 'scripts/disable_cloud_watch_alarm.py'
    - Enable Alarm:
        - eval 'scripts/enable_cloud_watch_alarm.py'
    - List Alarms:
        - eval 'scripts/list_cloud_watch_alarms.py'
  - Dynamo DB:
    - Create Table:
        - eval 'scripts/create_dynamodb_table.py'
    - Delete Table:
        - eval 'scripts/delete_dynamodb_table.py'
    - Describe Table:
        - eval 'scripts/describe_dynamodb_table.py'
    - List Tables:
        - eval 'scripts/list_dynamo_dbs.py'
  - EC2:
    - Dashboard:
        - eval "scripts/ec2_dashboard.py"
    - Instances:
        - Instances:
            - Create Instances:
                - eval 'scripts/create_instance.py'
            - Delete Instance:
                - eval 'scripts/delete_instance.py'
            - Disable EC2 Instance Monitoring:
                - eval 'scripts/disable_ec2_instance_monitoring.py'
            - Enable EC2 Instance Monitoring:
                - eval 'scripts/enable_ec2_instance_monitoring.py'
            - Find EC2 Instance:
                - eval 'scripts/find_ec2_instance.py'
            - List Available Images:
                - eval 'scripts/list_available_images.py'
            - List Instances:
                - eval 'scripts/list_ec2_instance.py'
            - List Reserved Instances:
                - eval 'scripts/list_ec2_reserved_instance.py'
            - List Running Instances:
                - eval 'scripts/list_ec2_running_instances.py'
            - List Spot Instance Requests:
                - eval 'scripts/list_ec2_spot_instance_requests.py'
            - Reset Instance Attribute To Default Value:
                - eval 'scripts/reset_ec2_instance_attribute.py'
            - Start Instance:
                - eval 'scripts/start_instance.py'
            - Stop Instance:
                - eval 'scripts/stop_instance.py'
        - Spot Requests:
            - List Spot Fleet Instances:
                - eval 'scripts/list_spot_fleet_instances.py'
            - List Spot Fleet Requests:
                - eval 'scripts/list_spot_fleet_request.py'
            - List Spot Instance Requests:
                - eval 'scripts/list_spot_instance_requests.py'
            - List Sport Price History:
                - eval 'scripts/list_spot_price_history.py'
        - Reserved Instances:
            - List Reserved Instances:
                - eval 'scripts/list_reserved_instances.py'
            - List Reserved Instance Listings:
                - eval "echo To be prepared"
            - List Reserved Instance Modifications:
                - eval 'scripts/list_reserved_instance_modifications.py'
            - List Reserved Instance Offerings:
                - eval 'scripts/list_reserved_instance_offerings.py'
        - Commands:
            - eval "echo To Be prepared"
        - Dedicated Hosts:
            - Allocate Hosts:
                - eval "echo To be prepared"
            - List Hosts:
                - eval 'scripts/describe_hosts.py'
            - Modify Host:
                - eval "scripts/modify_hosts.py"
            - Releast Host:
                - eval "scripts/release_host.py"
    - Images:
        - Bundle Tasks:
            - eval "echo To Be Prepared"
    - Elastic Blockstore:
        - Volumes:
            - Attach Volume:
                - eval 'scripts/attach_volume.py'
            - Create Volume:
                - eval 'scripts/create_volume.py'
            - Delete Volume:
                - eval 'scripts/delete_volume.py'
            - Detach Volume:
                - eval 'scripts/detach_volume.py'
            - List Volumes:
                - eval 'scripts/list_volumes.py'
        - Snapshots:
            - Create Snapshot of Volume:
                - eval 'scripts/create_snapshot_of_volume.py'
            - Delete Snapshot of Volume:
                - eval 'scripts/delete_snapshot_of_volume.py'
            - List Snapshots:
                - eval 'scripts/list_snapshots.py'
    - Network & Security:
        - Security Groups:
            - Create Security Group:
                - eval 'scripts/create_security_group.py'
            - Delete Security Group:
                - eval 'scripts/delete_security_group.py'
            - List Security Groups:
                - eval 'scripts/list_security_groups.py'
        - Elastic IPs:
            - Allocate Address:
                - eval 'scripts/allocate_address_for_elastic_ip.py'
            - Associate Elastic IP to Network Interface:
                - eval 'scripts/associate_elastic_ip.py'
            - Create Elastic IP:
                - eval 'scripts/create_elastic_ip.py'
            - Delete Elastic IP:
                - eval 'scripts/delete_elastic_ip.py'
            - Describe Addresses:
                - eval 'scripts/describe_addresses.py'
            - Disassociate Elastic IP from Network Interface:
                - eval 'scripts/disassociate_elastic_ip.py'
            - List Elastic IPs:
                - eval 'scripts/list_elastic_ips.py'
        - Placement Groups:
            - Create Placement Group:
                - eval 'scripts/create_placement_group.py'
            - Delete Placement Group:
                - eval 'scripts/delete_placement_group.py'
            - List Placement Groups:
                - eval 'scripts/list_placement_groups.py'
        - Key Pairs:
            - Create Key Pair:
                - eval 'scripts/create_key_pair.py'
            - Delete Key Pair:
                - eval 'scripts/delete_key_pair.py'
            - List Key Pairs:
                - eval 'scripts/list_key_pairs.py'
        - Network Interfaces:
            - Attach Network Interface:
                - eval 'scripts/attach_network_interface.py'
            - Create Network Interface:
                - eval 'scripts/create_network_interface.py'
            - Delete Network Interface:
                - eval 'scripts/delete_network_interface.py'
            - Detach Network Interface:
                - eval 'scripts/detach_network_interface.py'
            - List Network Interfaces:
                - eval 'scripts/list_network_interfaces.py'
    - Load Balancing:
        - Load Balancers:
            - Attach Instance To Elastic Load Balancer:
                - eval 'scripts/attach_instance_to_elastic_load_balancer.py'
            - Create Elastic Load Balancer:
                - eval 'scripts/create_elastic_load_balancer.py'
            - Delete Elastic Load Balancer:
                - eval 'scripts/delete_elastic_load_balancer.py'
            - List Elastic Load Balancers:
                - eval 'scripts/list_elastic_load_balancers.py'
    - Auto Scaling:
        - Launch Configurations:
            - Create Launch Configuration:
                - eval 'scripts/create_launch_configuration.py'
            - Delete Launch Configuration:
                - eval 'scripts/delete_launch_configuration.py'
            - List Launch Configurations:
                - eval 'scripts/list_launch_configurations.py'
        - Auto Scaling Groups:
            - List Auto Scaling Groups:
                - eval 'scripts/list_auto_scaling_groups.py'
            - List Auto Scaling Instances:
                - eval 'scripts/list_auto_scaling_instances.py'
            - List Auto Scaling Load Balancers:
                - eval 'scripts/list_auto_scaling_load_balancers.py'
            - List Auto Scaling Termination Policy Types:
                - eval 'scripts/list_auto_scaling_termination_policy_types.py'
            - List Auto Scaling Policies:
                - eval 'scripts/list_auto_scaling_policies.py'
            - List Auto Scaling Activities:
                - eval 'scripts/list_auto_scaling_activities.py'
            - List Auto Scaling Launch Configurations:
                - eval 'scripts/list_auto_scaling_launch_configurations.py'
            - List Auto Scaling Lifecycle Hooks:
                - eval 'scripts/list_auto_scaling_lifecycle_hooks.py'
            - List Auto Scaling Notification Configurations:
                - eval 'scripts/list_auto_scaling_notification_configurations.py'
            - List Auto Scaling Scheduled Actions:
                - eval 'scripts/list_auto_scaling_scheduled_actions.py'
  - EC2 Container Service:
    - Create CF Stack:
        - eval 'scripts/create_cf_stack.py'
    - Create ECS Cluster:
      - eval 'scripts/create_ecs_cluster.py'
    - Create ECS Instance:
      - eval 'scripts/create_ecs_instance.py'
    - Create ECS Instance Role:
      - eval 'scripts/create_ecs_instance_role.py'
    - Create ECS Service Role:
      - eval 'scripts/create_ecs_service_role.py'
    - Create ECS Security Group:
      - eval 'scripts/create_ecs_security_group.py'
    - Create ECS Launch Configuration:
      - eval 'scripts/create_ecs_launch_configuration.py'
    - Create ECS AutoScaling Group:
      - eval 'scripts/create_ecs_auto_scaling_group.py'
    - Create ECS Service:
      - eval 'scripts/create_ecs_service.py'
    - Describe ECS Task Definition:
      - eval 'scripts/describe_ecs_task_definitions.py'
    - Register ECS Container Instance:
      - eval 'scripts/register_ecs_container_instance.py'
    - Delete ECS Cluster:
      - eval 'scripts/delete_ecs_cluster.py'
    - Delete ECS Service:
      - eval 'scripts/delete_ecs_service.py'
    - List Clusters:
      - eval 'scripts/list_ecs_clusters.py'
    - List ECS Tasks:
      - eval 'scripts/list_ecs_tasks.py'
    - List ECS Task Definition Families:
      - eval 'scripts/list_ecs_task_definition_families.py'
    - List ECS Inactive Task Definitions:
      - eval 'scripts/list_ecs_inactive_task_definitions.py'
    - List ECS Active Task Definitions:
      - eval 'scripts/list_ecs_active_task_definitions.py'
    - List ECS Services:
      - eval 'scripts/list_ecs_services.py'
    - List ECS Container Instances:
      - eval 'scripts/list_ecs_container_instances.py'
    - List Repositories:
      - eval 'scripts/test.py'
    - Register ECS Task Definition:
      - eval 'scripts/register_ecs_task_definition.py'
    - Start ECS Service:
      - eval 'scripts/start_ecs_service.py'
    - Stop ECS Service:
      - eval 'scripts/stop_ecs_service.py'
    - Stop ECS Task:
      - eval 'scripts/stop_ecs_task.py'
  - Elastic Cache:
    - Cache:
        - List Cache Engine Default Parameters:
            - eval 'scripts/describe_elastic_cache_engine_default_parameters.py'
        - List Cache Engine Versions:
            - eval 'scripts/describe_elastic_cache_engine_versions.py'
        - List Parameters:
            - eval 'scripts/describe_elastic_cache_parameters.py'
    - Cache Clusters:
        - Create Cluster:
            - eval 'scripts/create_elastic_cache_cluster.py'
        - List Clusters:
            - eval 'scripts/describe_elastic_cache_clusters.py'
    - Replication Groups:
        - Create Replication Group:
            - eval 'scripts/create_elastic_cache_replication_group.py'
        - Delete Replication Groups:
            - eval "echo To be prepared"
        - List Replication Groups:
            - eval 'scripts/describe_elastic_cache_replication_groups.py'
    - Reserved Cache Nodes:
        - List Reserved Nodes:
            - eval 'scripts/describe_elastic_cache_reserved_nodes.py'
        - List Reserved Nodes Offerings:
            - eval 'scripts/describe_elastic_cache_reserved_nodes_offerings.py'
        - Purchase Reserved Cache Node:
            - eval "echo To be prepared"
    - Snapshots:
        - Create Snapshot:
            - eval "echo To be prepared"
        - List Snapshots:
            - eval 'scripts/describe_elastic_cache_snapshots.py'
        - Delete Snapshot:
            - eval "echo To be prepared"
    - Cache Security Groups:
        - Create Security Group:
            - eval 'scripts/create_elastic_cache_security_group.py'
        - Delete Security Group:
            - eval 'scripts/delete_elastic_cache_security_group.py'
        - List Security Groups:
            - eval 'scripts/describe_elastic_cache_security_groups.py'
    - Cache Parameter Groups:
        - Create Parameter Group:
            - eval 'scripts/create_elastic_cache_parameter_group.py'
        - Delete Parameter Group:
            - eval 'scripts/delete_elastic_cache_parameter_group.py'
        - List Parameter Groups:
            - eval 'scripts/describe_elastic_cache_parameter_groups.py'
    - Cache Subnet Groups:
        - Create Subnet Group:
            - eval 'scripts/create_elastic_cache_subnet_group.py'
        - Delete Subnet Group:
            - eval "echo To be prepared"
        - List Subnet Groups:
            - eval 'scripts/describe_elastic_cache_subnet_groups.py'
    - Cache Events:
        - List Events:
            - eval 'scripts/describe_elastic_cache_events.py'
  - IAM:
     - Account Aliases:
        - Create Account Alias:
            - eval 'scripts/create_iam_account_alias.py'
        - Delete Account Alias:
            - eval 'scripts/delete_iam_account_alias.py'
        - List Account Aliases:
            - eval 'scripts/list_iam_account_aliases.py'
     - Groups:
        - Attach Policy to Group:
            - eval 'scripts/attach_policy_to_group.py'
        - Create Group:
            - eval 'scripts/create_iam_group.py'
        - Delete Group:
            - eval 'scripts/delete_iam_group.py'
        - Detach Policy from Group:
            - eval 'scripts/detach_policy_from_group.py'
        - List Groups:
            - eval 'scripts/list_iam_groups.py'
        - List Policies Attached to Group:
            - eval 'scripts/list_policies_attached_to_group.py'
     - Instances:
        - List Instance Profiles:
            - eval 'scripts/list_iam_instance_profiles.py'
     - MFA (Multi-Factor Authentication):
        - Create Virtual MFA Device:
            - eval 'scripts/create_virtual_mfa_device.py'
        - Deactivate User Virtual MFA Device:
            - eval 'scripts/deactivate_user_mfa_device.py'
        - Delete User MFA Device:
            - eval 'scripts/delete_user_mfa_device.py'
        - Delete User Virtual MFA Device:
            - eval 'scripts/delete_user_virtual_mfa_device.py'
        - List User MFA Devices:
            - eval 'scripts/list_user_mfa_devices.py'
        - List User Virtual MFA Devices:
            - eval 'scripts/list_user_virtual_mfa_devices.py'
     - Open ID Connect Providers:
        - List Open ID Connect Providers:
            - eval 'scripts/list_iam_open_id_connect_providers.py'
     - Policies:
        - Attach Policy to Group:
            - eval 'scripts/attach_policy_to_group.py'
        - Attach Managed Policy to User:
            - eval 'scripts/attach_policy_to_user.py'
        - Create Policy:
            - eval 'scripts/create_iam_policy.py'
        - Create New Customer Managed Policy Version:
            - eval 'scripts/create_new_iam_customer_managed_policy_version.py'
        - Delete Customer Managed Policy Version:
            - eval 'scripts/delete_iam_customer_managed_policy_version.py'
        - Delete Policy:
            - eval 'scripts/delete_iam_customer_managed_policies.py'
        - Detach Policy from Group:
            - eval 'scripts/detach_policy_from_group.py'
        - Detach Policy From User:
            - eval 'scripts/detach_policy_from_user.py'
        - List Policies Attached to Group:
            - eval 'scripts/list_policies_attached_to_group.py'
        - List All Available Policies:
            - eval 'scripts/list_iam_policies.py'
        - List Customer Managed Policies:
            - eval 'scripts/list_iam_customer_managed_policies.py'
        - List Customer Managed Policy Versions:
            - eval 'scripts/list_iam_customer_managed_policy_versions.py'
        - List User Inline Policies:
            - eval 'scripts/list_iam_user_policies.py'
        - List User Group Policies:
            - eval 'scripts/get_iam_user_group_policy.py'
     - Roles:
        - Attach Policy to Role:
            - eval 'scripts/attach_policy_to_role.py'
        - Create Role:
            - eval 'scripts/create_iam_role.py'
        - Delete Role:
            - eval 'scripts/delete_iam_role.py'
        - Detach Policy from Role:
            - eval 'scripts/detach_policy_from_role.py'
        - List Policies Attached To Role:
            - eval 'scripts/list_policies_attached_to_role.py'
        - List Roles:
            - eval 'scripts/list_iam_roles.py'
     - SAML Providers:
        - List SAML Providers:
            - eval 'scripts/list_iam_saml_providers.py'
     - Server Certificates:
        - Create Server Certificate:
            - eval 'scripts/create_iam_server_certificates.py'
        - List Server Certificates:
            - eval 'scripts/list_iam_server_certificates.py'
        - Upload Server Certificate:
            - eval 'scripts/upload_iam_server_certificates.py'
     - Signing Certificates:
        - List Signing Certificates:
            - eval 'scripts/list_iam_signing_certificates.py'
     - SSH Public Keys:
        - List SSH Public Keys:
            - eval 'scripts/list_iam_ssh_public_keys.py'
     - Users:
        - Attach Policy to User:
            - eval 'scripts/attach_policy_to_user.py'
        - Create User:
            - eval 'scripts/create_iam_user.py'
        - Create User Access Key:
            - eval 'scripts/create_iam_user_access_key.py'
        - Create User Login Profile:
            - eval 'scripts/create_iam_user_login_profile.py'
        - Delete User:
            - eval 'scripts/delete_iam_user.py'
        - Delete User Access Key:
            - eval 'scripts/delete_iam_user_access_key.py'
        - Delete User Login Profile:
            - eval 'scripts/delete_iam_user_login_profile.py'
        - Detach Policy From User:
            - eval 'scripts/detach_policy_from_user.py'
        - List User:
            - eval 'scripts/list_iam_users.py'
        - List User Access Keys:
            - eval 'scripts/list_iam_user_access_keys.py'
        - List User Login Profile:
            - eval 'scripts/list_iam_user_login_profile.py'
        - List Policies Attached to User:
            - eval 'scripts/list_iam_policies_attached_to_user.py'
  - RDS:
    - Dashboard:
        - eval 'scripts/rds_dashboard.py'
    - Instances:
        - Create RDS Instance:
            - eval 'scripts/create_rds_instance.py'
        - Delete RDS Instance:
            - eval 'scripts/delete_rds_instance.py'
        - Describe database clusters:
            - eval 'scripts/describe_database_clusters.py'
        - List RDS Instances:
            - eval 'scripts/list_rds_instances.py'
        - List Reserved RDS Instances:
            - eval 'scripts/list_reserved_rds_instances.py'
        - Modify Instance:
            - eval 'scripts/modify_rds_instance.py'
        - Reboot Instance:
            - eval "scripts/reboot_rds_instance.py"
    - Reserved Purchases:
        - Purchase Reserved DB Instance Offering:
            - eval "echo To Be Prepared"
    - Snapshots:
        - Create RDS Snapshot:
            - eval 'scripts/create_rds_snapshot.py'
        - Delete RDS Snapshot:
            - eval 'scripts/delete_rds_snapshot.py'
        - List RDS Snapshots:
            - eval 'scripts/list_rds_snapshots.py'
        - List Automated RDS Snapshots:
            - eval 'scripts/list_automated_rds_snapshots.py'
        - List Manual RDS Snapshots:
            - eval 'scripts/list_manual_rds_snapshots.py'
    - Security Groups:
        - Authorize RDS Security Group Ingress:
            - eval 'scripts/authorize_rds_security_group_ingress.py'
        - Create RDS Security Group:
            - eval 'scripts/create_rds_security_group.py'
        - Delete RDS Security Group:
            - eval 'scripts/delete_rds_security_group.py'
        - List RDS Security Groups:
            - eval 'scripts/list_rds_security_groups.py'
        - Revoke RDS Security Group Ingress:
            - eval 'scripts/revoke_rds_security_group_ingress.py'
    - Parameter Groups:
        - Copy Parameter Group:
            - eval "echo To be prepared"
        - Create Parameter Group:
            - eval "echo To be prepared"
        - Create Cluster Parameter Group:
            - eval "echo To be prepared"
        - Delete Parameter Group:
            - eval "echo To be prepared"
        - Delete Cluster Parameter Group:
            - eval "echo To be prepared"
        - List Parameter Groups:
            - eval 'scripts/list_rds_parameter_groups.py'
        - List Cluster Parameter Groups:
            - eval "echo To be prepared"
        - Modify Parameter Group:
            - eval "echo To be prepared"
        - Modify Cluster Parameter Group:
            - eval "echo To be prepared"
        - Reset Parameter Group:
            - eval "echo To be prepared"
        - Reset Cluster Parameter Group:
            - eval "echo To be prepared"
    - Option Groups:
        - Copy Option Group:
            - eval "echo To be prepared"
        - Create Option Group:
            - eval "echo To be prepared"
        - Delete Option Group:
            - eval "echo To be prepared"
        - List Options Groups:
            - eval 'scripts/list_rds_option_groups.py'
        - List Option Group Options:
            - eval "echo To be prepared"
        - List Orderable Instance Options:
            - eval "echo To be prepared"
        - Modify Options Group:
            - eval "echo To be prepared"
    - Subnet Groups:
        - Create RDS Subnet Group:
            - eval 'scripts/create_rds_subnet_group.py'
        - List RDS Subnet Groups:
            - eval 'scripts/list_rds_subnet_groups.py'
    - Events:
        - List Events:
            - eval 'scripts/list_rds_events.py'
    - Event Subscriptions:
        - Create Event Subscription:
            - eval "echo To be prepared"
        - Delete Event Subscription:
            - eval "echo To be prepared"
        - List Event Subscriptions:
            - eval 'scripts/list_rds_event_subscriptions.py'
        - Modify Event Subscription:
            - eval "echo To be prepared"
  - Route53:
    - Other:
        - List Geo Locations:
            - eval 'scripts/list_route53_geo_locations.py'
        - List Resource Record Sets:
            - eval 'scripts/List_resource_record_sets.py'
    - Hosted Zones:
        - List Hosted Zones:
            - eval 'scripts/list_hosted_zones.py'
    - Health checks:
        - eval "echo To be prepared"
    - Traffic Flow:
        - Traffic Policies:
            - List Traffic Policies:
                - eval 'scripts/list_route53_traffic_policies.py'
        - Policy Records:
            - eval "echo To be prepared"
    - Domains:
        - Registered Domains:
            - eval "echo To be prepared"
        - Pending Requests:
            - eval "echo To be prepared"
  - S3:
    - Get S3 Bucket Policy:
        - eval 'scripts/get_s3_bucket_policy.py'
    - Empty Bucket:
        - eval "echo To be prepared"
    - List S3 Buckets:
        - eval 'scripts/list_s3_buckets.py'
    - List S3 Bucket ACL:
        - eval 'scripts/list_s3_bucket_acl.py'
    - List S3 File Url:
        - eval 'scripts/list_s3_file_url.py'
    - Upload File:
        - eval "echo To be prepared"
  - SNS:
    - Topics:
        - Create SNS Topic:
            - eval 'scripts/create_sns_topic.py'
        - Delete SNS Topic:
            - eval 'scripts/delete_sns_topic.py'
        - List SNS Topics:
            - eval 'scripts/list_sns_topics.py'
    - Applications:
        - Platform Applications:
            - Create Platform Application:
                - eval "echo To be prepared"
            - Delete Platform Application:
                - eval "echo To be prepared"
            - List Platform Applications:
                - eval "echo To be prepared"
        - Platform Endpoints:
            - Create Platform Endpoint:
                - eval "echo To be prepared"
            - Delete Platform Endpoint:
                - eval "echo To be prepared"
            - List Platform Endpoints:
                - eval "echo To be prepared"
    - Subscriptions:
        - Create SNS Subscription:
            - eval "echo To be prepared"
        - Delete SNS Subscription:
            - eval 'scripts/delete_sns_subscription.py'
        - List SNS Subscriptions:
            - eval 'scripts/list_sns_subscriptions.py'
  - SQS:
    - Create SQS Queue:
        - eval 'scripts/create_sqs_queue.py'
    - Delete SQS Queue:
        - eval 'scripts/delete_sqs_queue.py'
    - List SQS Queues:
        - eval 'scripts/list_sqs_queues.py'
    - Purge SQS Queue:
        - eval 'scripts/purge_sqs_queue.py'
    - Receive Message from SQS Queue:
        - eval 'scripts/receive_message_from_sqs_queue.py'
    - Send Message to SQS Queue:
        - eval 'scripts/send_message_to_sqs_queue.py'
  - Support:
    - List Support Cases:
        - eval 'scripts/list_support_cases.py'
  - Tags:
    - Create Tags:
        - eval 'scripts/create_tags.py'
    - Delete Tags:
        - eval 'scripts/delete_tags.py'
    - List Tags:
        - eval 'scripts/list_tags.py'
  - VPC:
    - Dashboard:
        - eval 'scripts/vpc_dashboard.py'
    - Virtual Private Cloud:
        - Your VPCs:
            - Create VPC:
                - eval 'scripts/create_vpc.py'
            - Delete VPC:
                - eval 'scripts/delete_vpc.py'
            - List subnets for vpc:
                - eval 'scripts/list_subnets_for_vpc.py'
            - List VPCs:
                - eval 'scripts/list_vpcs.py'
            - Lookup VPC:
                - eval 'scripts/lookup_vpc_info.py'
        - Subnets:
            - Change Map Public IP On Launch For Subnet:
                - eval 'scripts/change_map_public_ip_on_launch_for_subnet.py'
            - Create Subnet:
                - eval 'scripts/create_subnet.py'
            - Delete Subnet:
                - eval 'scripts/delete_subnet.py'
            - List Subnets:
                - eval 'scripts/list_subnets.py'
            - List Subnets for VPC:
                - eval 'scripts/list_subnets_for_vpc.py'
        - Route Tables:
            - Associate Route Table To Subnet:
                - eval 'scripts/associate_route_table_to_subnet.py'
            - Create Route Table For VPC:
                - eval 'scripts/create_route_table_for_vpc.py'
            - Delete Route Table:
                - eval 'scripts/delete_route_table.py'
            - Disassociate Route Table From Subnet:
                - eval 'scripts/disassociate_route_table_from_subnet.py'
            - List route tables with associations to a Subnet:
                - eval 'scripts/list_route_tables.py'
            - List All Route Tables:
                - eval 'scripts/list_all_route_tables.py'
        - Internet Gateways:
            - Attach Internet Gateway to VPC:
                - eval 'scripts/attach_internet_gateway.py'
            - Create Internet Gateway:
                - eval 'scripts/create_internet_gateway.py'
            - Delete Internet Gateway:
                - eval 'scripts/delete_internet_gateway.py'
            - Detach Internet Gateway:
                - eval 'scripts/detach_internet_gateway.py'
            - List Internet Gateways:
                - eval 'scripts/list_internet_gateways.py'
        - DHCP Options Sets:
            - Associate DHCP Option To VPC:
                - eval 'scripts/associate_dhcp_option_to_vpc.py'
            - Create DHCP Option:
                - eval 'scripts/create_dhcp_option.py'
            - Delete DHCP Option:
                - eval 'scripts/delete_dhcp_option.py'
            - List Dhcp Options:
                - eval 'scripts/list_dhcp_options.py'
        - Elastic IPs:
            - Allocate Address:
                - eval 'scripts/allocate_address_for_elastic_ip.py'
            - Associate Elastic IP to Network Interface:
                - eval 'scripts/associate_elastic_ip.py'
            - Create Elastic IP:
                - eval 'scripts/create_elastic_ip.py'
            - Delete Elastic IP:
                - eval 'scripts/delete_elastic_ip.py'
            - Describe Addresses:
                - eval 'scripts/describe_addresses.py'
            - Disassociate Elastic IP from Network Interface:
                - eval 'scripts/disassociate_elastic_ip.py'
            - List Elastic IPs:
                - eval 'scripts/list_elastic_ips.py'
        - Endpoints:
            - List Endpoints:
                - eval 'scripts/list_endpoints.py'
        - NAT Gateways:
            - Create NAT Gateway:
                - eval 'scripts/create_nat_gateway.py'
            - Delete NAT Gateway:
                - eval 'scripts/delete_nat_gateway.py'
            - List NAT Gateways:
                - eval 'scripts/list_nat_gateways.py'
        - Peering Connections:
            - Accept Peering Connection:
                - eval 'scripts/accept_peering_connections.py'
            - Create Peering Connection:
                - eval 'scripts/create_peering_connection.py'
            - Delete Peering Connection:
                - eval 'scripts/delete_peering_connections.py'
            - List Peering Connections:
                - eval 'scripts/list_peering_connections.py'
    - Security:
        - Network ACLs:
            - Add Network ACL Entry:
                - eval 'scripts/add_network_acl_entry.py'
            - Change Network ACL Subnet Association:
                - eval 'scripts/change_network_acl_subnet_association.py'
            - Create Network ACL:
                - eval 'scripts/create_network_acl.py'
            - Delete Network ACL:
                - eval 'scripts/delete_network_acl.py'
            - Delete Network ACL Entry:
                - eval 'scripts/delete_network_acl_entry.py'
            - List Network ACLs:
                - eval 'scripts/list_network_acls.py'
            - List Network ACL Entries:
                - eval 'scripts/list_network_acl_entries.py'
            - List Network ACL Subnet Associations:
                - eval 'scripts/list_network_acls_subnet_associations.py'
        - Security Groups:
            - Create Security Group:
                - eval 'scripts/create_security_group.py'
            - Delete Security Group:
                - eval 'scripts/delete_security_group.py'
            - List Security Groups:
                - eval 'scripts/list_security_groups.py'
        - VPN Connections:
            - Customer Gateways:
                - Create Gateway:
                    - eval 'scripts/create_customer_gateway.py'
                - List Gateways:
                    - eval 'scripts/list_customer_gateways.py'
                - Delete Gateway:
                    - eval 'scripts/delete_customer_gateway.py'
            - Virtual Private Gateways:
                - Create Gateway:
                    - eval 'scripts/create_vpn_gateway.py'
                - Delete Gateway:
                    - eval 'scripts/delete_vpn_gateway.py'
                - List Gateways:
                    - eval 'scripts/list_vpn_gateways.py'
            - VPN Connections:
                - Create VPN Connection:
                    - eval 'scripts/create_vpn_connection.py'
                - Delete VPN Connection:
                    - eval 'scripts/delete_vpn_connection.py'
                - List VPN Connections:
                    - eval 'scripts/list_vpn_connections.py'


meta:
  env:
    PROFILE: none