# =============================================
# Processors for reads procesing - Prinseq-lite
# =============================================
#
# Processors for NGS reads filtering/trimming
---

- name: filtering:sortmerna-2.0-single-end
  version: 1.0.9
  label: Filter single-end NGS reads (SortMeRNA-2.0)
  type: data:reads:fastq:single:sortmerna
  category: analyses
  persistence: CACHED
  description: >
    SortMeRNA is a biological sequence analysis tool for filtering, mapping and OTU-picking NGS reads. The main application of SortMeRNA is filtering rRNA from metatranscriptomic data. Additional applications include OTU-picking and taxonomy assignation available through QIIME v1.9+
  input:
    - name: reads
      label: Reads
      type: data:reads:fastq:single
      required: true
    - name: database_selection
      label: rRNA database(s)
      type: list:basic:string
      required: true
      placeholder: Database name
      default: ["silva-arc-16s-id95.fasta", "silva-arc-23s-id98.fasta", "silva-bac-16s-id90.fasta", "silva-bac-23s-id98.fasta", "silva-euk-18s-id95.fasta", "silva-euk-28s-id98.fasta", "rfam-5.8s-database-id98.fasta", "rfam-5s-database-id98.fasta"]
      description: >
        There are eight rRNA representative databases included with SortMeRNA. All databases were derived from the SILVA SSU and LSU databases (release 119) and the RFAM databases using HMMER 3.1b1 and SumaClust v1.0.00.
    - name: options
      label: Options
      group:
      - name: sam
        label: Output alignments in sam format
        type: basic:boolean
        required: false
        default: false
      - name: threads
        label: Use this many processor threads
        type: basic:integer
        required: true
        default: 2
        description: >
          Number of processor threads to use
  output:
    - name: fastq
      label: Filtered sequences (w/o rRNA)
      type: basic:file
    - name: fastq_rRNA
      label: rRNA sequences
      type: basic:file
    - name: fastq_rRNA_sam
      label: rRNA sequences (sam)
      type: basic:file
    - name: stats
      label: Filter statistics
      type: basic:file
    - name: number
      label: Number of reads
      type: basic:integer
    - name: bases
      label: Number of bases
      type: basic:string
    - name: fastqc_url
      label: Quality control with FastQC
      type: basic:url:view
    - name: fastqc_archive
      label: Download FastQC archive
      type: basic:file
  static:
    - name: name
      label: Name
      type: basic:string
      default: 'Filtered reads ({{ reads.fastq.file|default:"?" }})'
    - name: cite
      label: Citation
      type: list:basic:url:link
    - name: experiment
      label: Experiment
      type: basic:string
    - name: attachments
      label: Attachments
      type: list:basic:file
    - name: tags
      label: Tags
      type: list:basic:string
      default: ["SortMeRNA", "Filtered NGS reads"]
      placeholder: new tag
    - name: description
      label: Description
      type: basic:text
      default: 'Description of {{ reads.fastq.file|default:"?" }}.'
  var:
    - name: notes
      label: Notes
      type: basic:text
  run:
    runtime: polyglot
    bash: |
      database=""

      {% for d in database_selection %}
        database=$database"{{d}},"
      {% endfor %}

      re-progress 0.05

      database=${database%?}
      root='{{proc.data_path}}/{{proc.data_id}}'
      slugs_path='{{ proc.slugs_path }}'
      databases_indx=`sortmerna_database.py ${database} ${root} ${slugs_path}`

      echo "Index rRNA databases"
      mkdir index
      indexdb_rna --ref ${databases_indx} -v
      re-checkrc "Failed while indexing rRNA database."
      re-progress 0.1

      NAME=`basename '{{reads.fastq.file}}' .fastq.gz`
      gzip -cd "{{ reads.fastq.file }}" > "${NAME}.fastq"

      echo "RUN SortMeRNA"
      sortmerna --reads "${NAME}.fastq" --ref ${databases_indx} --aligned "${NAME}_rRNA" --other "${NAME}_wo_rRNA" --fastx -v --log -a {{ options.threads }} {% if options.sam %} --sam {% endif %}
      re-checkrc "Failed while processing with SortMeRNA."
      re-progress 0.9

      gzip -n ${NAME}_rRNA.fastq
      gzip -n ${NAME}.fastq
      mv ${NAME}_rRNA.log stats.log

      echo "Postprocessing FastQC..."
      # http://www.bioinformatics.babraham.ac.uk/projects/fastqc/
      mkdir "fastqc" && fastqc "${NAME}.fastq.gz" --extract --outdir="fastqc" >&2
      re-checkrc "Failed while processing with FastQC."
      re-progress 0.9

      BASES=$(awk '/^Sequence length/ {print $3}' fastqc/*_fastqc/fastqc_data.txt)
      NUMBER=`sed -ne 's/^Total Sequences\s*\([0-9\.]\+\)\s*$/\1/pi' fastqc/*_fastqc/fastqc_data.txt | head -n 1`
      FASTQC_URL="{\"name\":\"View\",\"url\":\"fastqc/${NAME}_fastqc/fastqc_report.html\",\"refs\":[\"fastqc/${NAME}_fastqc\"]}"
      mv "fastqc/${NAME}_fastqc.zip" .
      re-progress 0.95

      re-save-file fastq ${NAME}.fastq.gz
      re-save-file fastq_rRNA ${NAME}_rRNA.fastq.gz
      {% if options.sam %}
            re-save-file fastq_rRNA_sam ${NAME}_rRNA.sam
      {% endif %}
      re-save-file stats stats.log
      re-save-file fastqc_archive ${NAME}_fastqc.zip
      re-save number $NUMBER
      re-save bases "\"$BASES\""
      re-save fastqc_url $FASTQC_URL


- name: filtering:sortmerna-2.0-paired-end
  version: 1.0.9
  label: Filter paired-end NGS reads (SortMeRNA-2.0)
  type: data:reads:fastq:paired:sortmerna
  category: analyses
  persistence: CACHED
  description: >
    SortMeRNA is a biological sequence analysis tool for filtering, mapping and OTU-picking NGS reads. The main application of SortMeRNA is filtering rRNA from metatranscriptomic data. Additional applications include OTU-picking and taxonomy assignation available through QIIME v1.9+
  input:
    - name: reads
      label: Reads
      type: data:reads:fastq:paired
      required: true
    - name: database_selection
      label: rRNA database(s)
      type: list:basic:string
      required: true
      placeholder: Database name
      default: ["silva-arc-16s-id95.fasta", "silva-arc-23s-id98.fasta", "silva-bac-16s-id90.fasta", "silva-bac-23s-id98.fasta", "silva-euk-18s-id95.fasta", "silva-euk-28s-id98.fasta", "rfam-5.8s-database-id98.fasta", "rfam-5s-database-id98.fasta"]
      description: >
        There are eight rRNA representative databases included with SortMeRNA. All databases were derived from the SILVA SSU and LSU databases (release 119) and the RFAM databases using HMMER 3.1b1 and SumaClust v1.0.00.
    - name: options
      label: Options
      group:
      - name: sort_paired_end
        label: Data sorting
        type: basic:string
        required: true
        description: >
          When writing aligned and non-aligned reads to FASTA/Q files, sometimes the situation arises where one of the paired-end reads aligns and the other one doesn't. Since SortMeRNA looks at each read individually, by default the reads will be split into two separate files. That is, the read that aligned will go into the --aligned FASTA/Q file and the pair that didn't align will go into the --other FASTA/Q file. --paired-in will put both reads into the file specified by --aligned (rRNA reads). --paired-out will put both reads into the file specified by --other (non-rRNA reads).
        default: --paired_in
        choices:
          - label: paired_in
            value: --paired_in
          - label: paired_out
            value: --paired_out
      - name: sam
        label: Output alignments in sam format
        type: basic:boolean
        required: false
        default: false
      - name: threads
        label: Use this many processor threads
        type: basic:integer
        default: 2
        description: >
          Number of processor threads to use
  output:
    - name: fastq
      label: Filtered sequences (w/o rRNA) (mate 1)
      type: basic:file
    - name: fastq2
      label: Filtered sequences (w/o rRNA) (mate 2)
      type: basic:file
    - name: fastq_rRNA
      label: rRNA sequences
      type: basic:file
    - name: fastq_rRNA_sam
      label: rRNA sequences (sam)
      type: basic:file
    - name: stats
      label: Filter statistics
      type: basic:file
    - name: number
      label: Number of reads
      type: basic:integer
    - name: bases
      label: Number of bases
      type: basic:string
    - name: fastqc_url
      label: Quality control with FastQC (Upstream)
      type: basic:url:view
    - name: fastqc_url2
      label: Quality control with FastQC (Downstream)
      type: basic:url:view
    - name: fastqc_archive
      label: Download FastQC archive (Upstream)
      type: basic:file
    - name: fastqc_archive2
      label: Download FastQC archive (Downstream)
      type: basic:file
  static:
    - name: name
      label: Name
      type: basic:string
      default: Filtered reads ({{ reads.fastq.file|default:"?" }})
    - name: cite
      label: Citation
      type: list:basic:url:link
    - name: experiment
      label: Experiment
      type: basic:string
    - name: attachments
      label: Attachments
      type: list:basic:file
    - name: tags
      label: Tags
      type: list:basic:string
      default: ["SortMeRNA", "Filtered NGS reads"]
      placeholder: new tag
    - name: description
      label: Description
      type: basic:text
      default: Description of {{ reads.fastq.file|default:"?" }}
  var:
    - name: notes
      label: Notes
      type: basic:text
  run:
    runtime: polyglot
    bash: |
      database=""

      {% for d in database_selection %}
        database=$database"{{d}},"
      {% endfor %}

      database=${database%?}
      root='{{proc.data_path}}/{{proc.data_id}}'
      slugs_path='{{ proc.slugs_path }}'
      databases_indx=`sortmerna_database.py ${database} ${root} ${slugs_path}`
      re-progress 0.1

      echo "Index rRNA databases"
      mkdir index
      indexdb_rna --ref ${databases_indx} -v
      re-checkrc "Failed while indexing rRNA database."
      re-progress 0.2

      NAME1=`basename '{{reads.fastq.file}}' .fastq.gz`
      NAME2=`basename '{{reads.fastq2.file}}' .fastq.gz`
      gzip -cd "{{ reads.fastq.file }}" > "${NAME1}.fastq"
      gzip -cd "{{ reads.fastq2.file }}" > "${NAME2}.fastq"
      re-progress 0.3

      echo "Merge paired-end sequencing files"
      merge-paired-reads.sh "${NAME1}.fastq" "${NAME2}.fastq" "${NAME1}_interlieved.fastq"
      re-checkrc "Error while merging paired-end sequencing files"
      re-progress 0.4

      echo "RUN SortMeRNA"
      sortmerna --reads "${NAME1}_interlieved.fastq" --ref ${databases_indx} --aligned "${NAME1}_rRNA" --other "${NAME1}_wo_rRNA_interlieved" --fastx -v --log -a {{ options.threads }} {% if options.sam %} --sam {% endif %} {{ options.sort_paired_end}}
      re-checkrc "Failed while processing with SortMeRNA."
      re-progress 0.8

      echo "Unmerge interlieved sequencing file that contains no rRNA-derived reads"
      unmerge-paired-reads.sh "${NAME1}_wo_rRNA_interlieved.fastq" "${NAME1}_wo_rRNA.fastq" "${NAME2}_wo_rRNA.fastq"
      re-checkrc "Error while unmerging interlieved sequencing file"
      re-progress 0.9

      gzip -n ${NAME1}_rRNA.fastq
      gzip -n ${NAME1}.fastq
      gzip -n ${NAME2}.fastq

      mv ${NAME1}_rRNA.log stats.log

      echo "Postprocessing FastQC..."
      # http://www.bioinformatics.babraham.ac.uk/projects/fastqc/
      mkdir "fastqc" && fastqc "${NAME1}.fastq.gz" "${NAME2}.fastq.gz" --extract --outdir="fastqc" >&2
      re-checkrc "Failed while processing with FastQC."
      re-progress 0.9

      FASTQC_URL="{\"name\":\"View\",\"url\":\"fastqc/${NAME1}_fastqc/fastqc_report.html\",\"refs\":[\"fastqc/${NAME1}_fastqc\"]}"
      FASTQC_URL2="{\"name\":\"View\",\"url\":\"fastqc/${NAME2}_fastqc/fastqc_report.html\",\"refs\":[\"fastqc/${NAME2}_fastqc\"]}"
      mv "fastqc/${NAME1}_fastqc.zip" .
      mv "fastqc/${NAME2}_fastqc.zip" .

      BASES=$(awk '/^Sequence length/ {print $3}' fastqc/*_fastqc/fastqc_data.txt | sed -n -e 'H;${x;s/\n/, /g;s/^,//;p;}')
      NUMBER=`sed -ne 's/^Total Sequences\s*\([0-9\.]\+\)\s*$/\1/pi' fastqc/*_fastqc/fastqc_data.txt | head -n 1`

      re-save-file fastq ${NAME1}.fastq.gz
      re-save-file fastq2 ${NAME2}.fastq.gz
      re-save-file fastq_rRNA ${NAME1}_rRNA.fastq.gz
      {% if options.sam %}
            re-save-file fastq_rRNA_sam ${NAME1}_rRNA.sam
      {% endif %}
      re-save-file stats stats.log
      re-save-file fastqc_archive ${NAME1}_fastqc.zip
      re-save-file fastqc_archive2 ${NAME2}_fastqc.zip
      re-save number $NUMBER
      re-save bases "\"$BASES\""
      re-save fastqc_url $FASTQC_URL
      re-save fastqc_url2 $FASTQC_URL2
