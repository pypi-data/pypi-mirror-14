!function(){"use strict";var serviceModule=angular.module("orchestra.project_management.services");serviceModule.factory("iterationsVis",["$modal","dataService","visUtils","axis",function($modal,dataService,visUtils,axis){return{relativeTime:!0,draw:function(){var iterations=visUtils.parentContainer.selectAll(".task").selectAll(".assignment").selectAll(".iteration").data(function(assignmentKey){var iterations=[];return dataService.assignmentFromKey(assignmentKey).iterations.forEach(function(iteration,i){i>0&&iterations.push(dataService.keyFromIteration(iteration))}),iterations});iterations.exit().remove(),iterations.enter().append("rect").attr({"class":"iteration",height:visUtils.params.barHeight,stroke:"none","stroke-width":"2px",fill:"rgb(0, 121, 191)"}).on("mouseenter",function(){d3.select(this).attr("stroke","yellow")}).on("mouseleave",function(){d3.select(this).attr("stroke","none")}).on("click",function(iterationKey,i){var iteration=dataService.iterationFromKey(iterationKey);$modal.open({templateUrl:"/static/orchestra/project_management/partials/data_modal.html",controller:["$scope",function($scope){var snapshot=iteration.assignment.snapshots.snapshots[i];$scope.data=snapshot?snapshot.data:iteration.assignment.in_progress_task_data,$scope.header=iteration.assignment.task.step_slug+", "+iteration.assignment.worker.username+", iteration "+i,$scope.admin_url=iteration.assignment.admin_url}]})}),iterations.transition().attr({width:function(iterationKey){var iteration=dataService.iterationFromKey(iterationKey);return axis.getOffset(iteration.end_datetime)-axis.getOffset(iteration.start_datetime)},transform:function(iterationKey){var iteration=dataService.iterationFromKey(iterationKey);return visUtils.translateString(axis.getOffset(iteration.start_datetime)-axis.getOffset(iteration.assignment.task.start_datetime),0)},opacity:function(iterationKey){var iteration=dataService.iterationFromKey(iterationKey),task=iteration.assignment.task;return(task.assignments.length-task.assignments.indexOf(iteration.assignment))/task.assignments.length}})}}}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yY2hlc3RyYS9wcm9qZWN0X21hbmFnZW1lbnQvanMvaXRlcmF0aW9uc1Zpcy5qcyJdLCJuYW1lcyI6WyJzZXJ2aWNlTW9kdWxlIiwiYW5ndWxhciIsIm1vZHVsZSIsImZhY3RvcnkiLCIkbW9kYWwiLCJkYXRhU2VydmljZSIsInZpc1V0aWxzIiwiYXhpcyIsInJlbGF0aXZlVGltZSIsImRyYXciLCJpdGVyYXRpb25zIiwicGFyZW50Q29udGFpbmVyIiwic2VsZWN0QWxsIiwiZGF0YSIsImFzc2lnbm1lbnRLZXkiLCJhc3NpZ25tZW50RnJvbUtleSIsImZvckVhY2giLCJpdGVyYXRpb24iLCJpIiwicHVzaCIsImtleUZyb21JdGVyYXRpb24iLCJleGl0IiwicmVtb3ZlIiwiZW50ZXIiLCJhcHBlbmQiLCJhdHRyIiwiY2xhc3MiLCJoZWlnaHQiLCJwYXJhbXMiLCJiYXJIZWlnaHQiLCJzdHJva2UiLCJzdHJva2Utd2lkdGgiLCJmaWxsIiwib24iLCJkMyIsInNlbGVjdCIsInRoaXMiLCJpdGVyYXRpb25LZXkiLCJpdGVyYXRpb25Gcm9tS2V5Iiwib3BlbiIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsIiRzY29wZSIsInNuYXBzaG90IiwiYXNzaWdubWVudCIsInNuYXBzaG90cyIsImluX3Byb2dyZXNzX3Rhc2tfZGF0YSIsImhlYWRlciIsInRhc2siLCJzdGVwX3NsdWciLCJ3b3JrZXIiLCJ1c2VybmFtZSIsImFkbWluX3VybCIsInRyYW5zaXRpb24iLCJ3aWR0aCIsImdldE9mZnNldCIsImVuZF9kYXRldGltZSIsInN0YXJ0X2RhdGV0aW1lIiwidHJhbnNmb3JtIiwidHJhbnNsYXRlU3RyaW5nIiwib3BhY2l0eSIsImFzc2lnbm1lbnRzIiwibGVuZ3RoIiwiaW5kZXhPZiJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDRSxZQUVBLElBQUlBLGVBQWdCQyxRQUFRQyxPQUFPLHdDQUVuQ0YsZUFBY0csUUFBUSxpQkFBQSxTQUFBLGNBQUEsV0FBQSxPQUFpQixTQUFTQyxPQUFRQyxZQUFhQyxTQUFVQyxNQUs3RSxPQUNFQyxjQUFjLEVBQ2RDLEtBQU0sV0FJSixHQUFJQyxZQUFhSixTQUFTSyxnQkFBZ0JDLFVBQVUsU0FBU0EsVUFBVSxlQUNwRUEsVUFBVSxjQUNWQyxLQUFLLFNBQVNDLGVBQ2IsR0FBSUosY0FNSixPQUxBTCxhQUFZVSxrQkFBa0JELGVBQWVKLFdBQVdNLFFBQVEsU0FBU0MsVUFBV0MsR0FDOUVBLEVBQUksR0FDTlIsV0FBV1MsS0FBS2QsWUFBWWUsaUJBQWlCSCxjQUcxQ1AsWUFHWEEsWUFBV1csT0FBT0MsU0FDbEJaLFdBQVdhLFFBQVFDLE9BQU8sUUFDdkJDLE1BQ0NDLFFBQVMsWUFDVEMsT0FBVXJCLFNBQVNzQixPQUFPQyxVQUMxQkMsT0FBVSxPQUNWQyxlQUFnQixNQUNoQkMsS0FBUSxxQkFFVEMsR0FBRyxhQUFjLFdBQ2hCQyxHQUFHQyxPQUFPQyxNQUFNWCxLQUFLLFNBQVUsWUFFaENRLEdBQUcsYUFBYyxXQUNoQkMsR0FBR0MsT0FBT0MsTUFBTVgsS0FBSyxTQUFVLFVBRWhDUSxHQUFHLFFBQVMsU0FBU0ksYUFBY25CLEdBQ2xDLEdBQUlELFdBQVlaLFlBQVlpQyxpQkFBaUJELGFBQ3pCakMsUUFBT21DLE1BQ3pCQyxZQUFhLGdFQUNiQyxZQUFBLFNBQVksU0FBU0MsUUFDbkIsR0FBSUMsVUFBVzFCLFVBQVUyQixXQUFXQyxVQUFVQSxVQUFVM0IsRUFDeER3QixRQUFPN0IsS0FBTzhCLFNBQVdBLFNBQVM5QixLQUFPSSxVQUFVMkIsV0FBV0Usc0JBQzlESixPQUFPSyxPQUFTOUIsVUFBVTJCLFdBQVdJLEtBQUtDLFVBQVksS0FDcERoQyxVQUFVMkIsV0FBV00sT0FBT0MsU0FBVyxlQUFpQmpDLEVBQzFEd0IsT0FBT1UsVUFBWW5DLFVBQVUyQixXQUFXUSxnQkFLaEQxQyxXQUFXMkMsYUFBYTVCLE1BQ3RCNkIsTUFBUyxTQUFTakIsY0FDaEIsR0FBSXBCLFdBQVlaLFlBQVlpQyxpQkFBaUJELGFBQzdDLE9BQU85QixNQUFLZ0QsVUFBVXRDLFVBQVV1QyxjQUFnQmpELEtBQUtnRCxVQUFVdEMsVUFBVXdDLGlCQUUzRUMsVUFBYSxTQUFTckIsY0FDcEIsR0FBSXBCLFdBQVlaLFlBQVlpQyxpQkFBaUJELGFBQzdDLE9BQU8vQixVQUFTcUQsZ0JBQ2JwRCxLQUFLZ0QsVUFBVXRDLFVBQVV3QyxnQkFDeEJsRCxLQUFLZ0QsVUFBVXRDLFVBQVUyQixXQUFXSSxLQUFLUyxnQkFBa0IsSUFFakVHLFFBQVcsU0FBU3ZCLGNBQ2xCLEdBQUlwQixXQUFZWixZQUFZaUMsaUJBQWlCRCxjQUN6Q1csS0FBTy9CLFVBQVUyQixXQUFXSSxJQUNoQyxRQUFRQSxLQUFLYSxZQUFZQyxPQUFTZCxLQUFLYSxZQUFZRSxRQUFROUMsVUFBVTJCLGFBQWVJLEtBQUthLFlBQVlDIiwiZmlsZSI6Im9yY2hlc3RyYS9wcm9qZWN0X21hbmFnZW1lbnQvanMvaXRlcmF0aW9uc1Zpcy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICB2YXIgc2VydmljZU1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdvcmNoZXN0cmEucHJvamVjdF9tYW5hZ2VtZW50LnNlcnZpY2VzJyk7XG5cbiAgc2VydmljZU1vZHVsZS5mYWN0b3J5KCdpdGVyYXRpb25zVmlzJywgZnVuY3Rpb24oJG1vZGFsLCBkYXRhU2VydmljZSwgdmlzVXRpbHMsIGF4aXMpIHtcbiAgICAvKipcbiAgICAgKiBTZXJ2aWNlIHRvIG1vZHVsYXJpemUgaXRlcmF0aW9uIHZpc3VhbGl6YXRpb24gYW5kIG1hbmlwdWxhdGlvbiB3aXRoaW5cbiAgICAgKiB0aGUgcHJvamVjdCBtYW5hZ2VtZW50IHZpZXcuXG4gICAgICovXG4gICAgcmV0dXJuIHtcbiAgICAgIHJlbGF0aXZlVGltZTogdHJ1ZSxcbiAgICAgIGRyYXc6IGZ1bmN0aW9uKCkge1xuICAgICAgICAvKipcbiAgICAgICAgICogRHJhd3MvdXBkYXRlcyBpdGVyYXRpb25zIHdpdGhpbiBwcm9qZWN0IG1hbmFnZW1lbnQgdmlzdWFsaXphdGlvbi5cbiAgICAgICAgICovXG4gICAgICAgIHZhciBpdGVyYXRpb25zID0gdmlzVXRpbHMucGFyZW50Q29udGFpbmVyLnNlbGVjdEFsbCgnLnRhc2snKS5zZWxlY3RBbGwoJy5hc3NpZ25tZW50JylcbiAgICAgICAgICAuc2VsZWN0QWxsKCcuaXRlcmF0aW9uJylcbiAgICAgICAgICAuZGF0YShmdW5jdGlvbihhc3NpZ25tZW50S2V5KSB7XG4gICAgICAgICAgICB2YXIgaXRlcmF0aW9ucyA9IFtdO1xuICAgICAgICAgICAgZGF0YVNlcnZpY2UuYXNzaWdubWVudEZyb21LZXkoYXNzaWdubWVudEtleSkuaXRlcmF0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uKGl0ZXJhdGlvbiwgaSkge1xuICAgICAgICAgICAgICBpZiAoaSA+IDApIHtcbiAgICAgICAgICAgICAgICBpdGVyYXRpb25zLnB1c2goZGF0YVNlcnZpY2Uua2V5RnJvbUl0ZXJhdGlvbihpdGVyYXRpb24pKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gaXRlcmF0aW9ucztcbiAgICAgICAgICB9KTtcblxuICAgICAgICBpdGVyYXRpb25zLmV4aXQoKS5yZW1vdmUoKTtcbiAgICAgICAgaXRlcmF0aW9ucy5lbnRlcigpLmFwcGVuZCgncmVjdCcpXG4gICAgICAgICAgLmF0dHIoe1xuICAgICAgICAgICAgJ2NsYXNzJzogJ2l0ZXJhdGlvbicsXG4gICAgICAgICAgICAnaGVpZ2h0JzogdmlzVXRpbHMucGFyYW1zLmJhckhlaWdodCxcbiAgICAgICAgICAgICdzdHJva2UnOiAnbm9uZScsXG4gICAgICAgICAgICAnc3Ryb2tlLXdpZHRoJzogJzJweCcsXG4gICAgICAgICAgICAnZmlsbCc6ICdyZ2IoMCwgMTIxLCAxOTEpJyxcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5vbignbW91c2VlbnRlcicsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZDMuc2VsZWN0KHRoaXMpLmF0dHIoJ3N0cm9rZScsICd5ZWxsb3cnKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5vbignbW91c2VsZWF2ZScsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZDMuc2VsZWN0KHRoaXMpLmF0dHIoJ3N0cm9rZScsICdub25lJyk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAub24oJ2NsaWNrJywgZnVuY3Rpb24oaXRlcmF0aW9uS2V5LCBpKSB7XG4gICAgICAgICAgICB2YXIgaXRlcmF0aW9uID0gZGF0YVNlcnZpY2UuaXRlcmF0aW9uRnJvbUtleShpdGVyYXRpb25LZXkpO1xuICAgICAgICAgICAgdmFyIG1vZGFsSW5zdGFuY2UgPSAkbW9kYWwub3Blbih7XG4gICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3N0YXRpYy9vcmNoZXN0cmEvcHJvamVjdF9tYW5hZ2VtZW50L3BhcnRpYWxzL2RhdGFfbW9kYWwuaHRtbCcsXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXI6IGZ1bmN0aW9uKCRzY29wZSkge1xuICAgICAgICAgICAgICAgIHZhciBzbmFwc2hvdCA9IGl0ZXJhdGlvbi5hc3NpZ25tZW50LnNuYXBzaG90cy5zbmFwc2hvdHNbaV07XG4gICAgICAgICAgICAgICAgJHNjb3BlLmRhdGEgPSBzbmFwc2hvdCA/IHNuYXBzaG90LmRhdGEgOiBpdGVyYXRpb24uYXNzaWdubWVudC5pbl9wcm9ncmVzc190YXNrX2RhdGE7XG4gICAgICAgICAgICAgICAgJHNjb3BlLmhlYWRlciA9IGl0ZXJhdGlvbi5hc3NpZ25tZW50LnRhc2suc3RlcF9zbHVnICsgJywgJyArXG4gICAgICAgICAgICAgICAgICBpdGVyYXRpb24uYXNzaWdubWVudC53b3JrZXIudXNlcm5hbWUgKyAnLCBpdGVyYXRpb24gJyArIGk7XG4gICAgICAgICAgICAgICAgJHNjb3BlLmFkbWluX3VybCA9IGl0ZXJhdGlvbi5hc3NpZ25tZW50LmFkbWluX3VybDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgaXRlcmF0aW9ucy50cmFuc2l0aW9uKCkuYXR0cih7XG4gICAgICAgICAgJ3dpZHRoJzogZnVuY3Rpb24oaXRlcmF0aW9uS2V5KSB7XG4gICAgICAgICAgICB2YXIgaXRlcmF0aW9uID0gZGF0YVNlcnZpY2UuaXRlcmF0aW9uRnJvbUtleShpdGVyYXRpb25LZXkpO1xuICAgICAgICAgICAgcmV0dXJuIGF4aXMuZ2V0T2Zmc2V0KGl0ZXJhdGlvbi5lbmRfZGF0ZXRpbWUpIC0gYXhpcy5nZXRPZmZzZXQoaXRlcmF0aW9uLnN0YXJ0X2RhdGV0aW1lKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgICd0cmFuc2Zvcm0nOiBmdW5jdGlvbihpdGVyYXRpb25LZXkpIHtcbiAgICAgICAgICAgIHZhciBpdGVyYXRpb24gPSBkYXRhU2VydmljZS5pdGVyYXRpb25Gcm9tS2V5KGl0ZXJhdGlvbktleSk7XG4gICAgICAgICAgICByZXR1cm4gdmlzVXRpbHMudHJhbnNsYXRlU3RyaW5nKFxuICAgICAgICAgICAgICAoYXhpcy5nZXRPZmZzZXQoaXRlcmF0aW9uLnN0YXJ0X2RhdGV0aW1lKSAtXG4gICAgICAgICAgICAgICAgYXhpcy5nZXRPZmZzZXQoaXRlcmF0aW9uLmFzc2lnbm1lbnQudGFzay5zdGFydF9kYXRldGltZSkpLCAwKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgICdvcGFjaXR5JzogZnVuY3Rpb24oaXRlcmF0aW9uS2V5KSB7XG4gICAgICAgICAgICB2YXIgaXRlcmF0aW9uID0gZGF0YVNlcnZpY2UuaXRlcmF0aW9uRnJvbUtleShpdGVyYXRpb25LZXkpO1xuICAgICAgICAgICAgdmFyIHRhc2sgPSBpdGVyYXRpb24uYXNzaWdubWVudC50YXNrO1xuICAgICAgICAgICAgcmV0dXJuICh0YXNrLmFzc2lnbm1lbnRzLmxlbmd0aCAtIHRhc2suYXNzaWdubWVudHMuaW5kZXhPZihpdGVyYXRpb24uYXNzaWdubWVudCkpIC8gdGFzay5hc3NpZ25tZW50cy5sZW5ndGg7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuICB9KTtcbn0pKCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
