!function(){"use strict";var serviceModule=angular.module("orchestra.project_management.services");serviceModule.factory("projectVis",["$modal","$location","dataService","orchestraApi","crosshair","visUtils","tasksVis","assignmentsVis","iterationsVis","axis",function($modal,$location,dataService,orchestraApi,crosshair,visUtils,tasksVis,assignmentsVis,iterationsVis,axis){return{setup:function(scope,projectId,parentSelector){var vis=this;scope.vis=vis;var params={scaleHeight:40,barHeight:30,lanePadding:{top:30,bottom:25},marginLeft:200,marginRight:10,scaleWidth:1350};dataService.setup(projectId),visUtils.setup(d3.select(parentSelector),params),crosshair.setup(),vis.axis=axis,vis.dataService=dataService,vis.params=visUtils.params;var axisWrapper=visUtils.parentContainer.append("div").attr("class","axis-wrapper");axisWrapper.append("svg").attr({"class":"x axis",width:visUtils.getSvgWidth(),height:visUtils.params.scaleHeight}).style("margin-left",visUtils.params.marginLeft),axisWrapper.append("span").attr("class","x label"),scope.$on("orchestra:projectManagement:dataUpdate",vis.draw),dataService.updateData(function(){visUtils.parentContainer.node().scrollLeft=100})},draw:function(){axis.draw(),tasksVis.draw(),crosshair.draw(),visUtils.parentContainer.style({"margin-left":visUtils.svgLeftMargin()+"px"})},createSubsequentTasks:function(){orchestraApi.createSubsequentTasks(dataService.projectId).then(function(){dataService.updateData()},function(response){var errorMessage="Could not create subsequent tasks.";400===response.status&&(errorMessage=response.data.message),alert(errorMessage)})},showProjectData:function(){$modal.open({templateUrl:"/static/orchestra/project_management/partials/data_modal.html",controller:["$scope",function($scope){$scope.data=dataService.data.project,$scope.header=dataService.data.project.short_description,$scope.admin_url=dataService.data.project.admin_url}]})},showSlackActions:function(){var modalInstance=$modal.open({templateUrl:"/static/orchestra/project_management/partials/slack_modal.html",controller:["$scope","$log",function($scope,$log){$scope.editSlackMembership=function(action,username){orchestraApi.editSlackMembership(action,dataService.projectId,username).then(function(){modalInstance.close()},function(response){var errorMessage="Could not "+action+" user.";400===response.status&&(errorMessage=response.data.message),alert(errorMessage)})}}]})},endProject:function(){confirm("Are you sure you want to end this project? This cannot be undone.")&&orchestraApi.endProject(dataService.projectId).then(function(){$location.path("/")},function(response){var errorMessage="Could not end project.";400===response.status&&(errorMessage=response.data.message),alert(errorMessage)})}}}])}();
//# sourceMappingURL=data:application/json;base64,
