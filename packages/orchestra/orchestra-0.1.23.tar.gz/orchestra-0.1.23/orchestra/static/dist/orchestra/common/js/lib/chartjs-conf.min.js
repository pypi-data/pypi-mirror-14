var Script=function(){var o=[{value:30,color:"#1abc9c"},{value:50,color:"#2ecc71"},{value:100,color:"#3498db"},{value:40,color:"#9b59b6"},{value:120,color:"#34495e"}],a={labels:["","","","","","",""],datasets:[{fillColor:"rgba(220,220,220,0.5)",strokeColor:"rgba(220,220,220,1)",pointColor:"rgba(220,220,220,1)",pointStrokeColor:"#fff",data:[65,59,90,81,56,55,40]},{fillColor:"rgba(151,187,205,0.5)",strokeColor:"rgba(151,187,205,1)",pointColor:"rgba(151,187,205,1)",pointStrokeColor:"#fff",data:[28,48,40,19,96,27,100]}]},r=[{value:30,color:"#1abc9c"},{value:50,color:"#16a085"},{value:100,color:"#27ae60"}],e={labels:["January","February","March","April","May","June","July"],datasets:[{fillColor:"rgba(220,220,220,0.5)",strokeColor:"rgba(220,220,220,1)",data:[65,59,90,81,56,55,40]},{fillColor:"rgba(151,187,205,0.5)",strokeColor:"rgba(151,187,205,1)",data:[28,48,40,19,96,27,100]}]},t=[{value:Math.random(),color:"#D97041"},{value:Math.random(),color:"#C7604C"},{value:Math.random(),color:"#21323D"},{value:Math.random(),color:"#9D9B7F"},{value:Math.random(),color:"#7D4F6D"},{value:Math.random(),color:"#584A5E"}],l={labels:["","","","","","",""],datasets:[{fillColor:"rgba(220,220,220,0.5)",strokeColor:"rgba(220,220,220,1)",pointColor:"rgba(220,220,220,1)",pointStrokeColor:"#fff",data:[65,59,90,81,56,55,40]},{fillColor:"rgba(151,187,205,0.5)",strokeColor:"rgba(151,187,205,1)",pointColor:"rgba(151,187,205,1)",pointStrokeColor:"#fff",data:[28,48,40,19,96,27,100]}]};new Chart(document.getElementById("doughnut").getContext("2d")).Doughnut(o),new Chart(document.getElementById("line").getContext("2d")).Line(a),new Chart(document.getElementById("radar").getContext("2d")).Radar(l),new Chart(document.getElementById("polarArea").getContext("2d")).PolarArea(t),new Chart(document.getElementById("bar").getContext("2d")).Bar(e),new Chart(document.getElementById("pie").getContext("2d")).Pie(r)}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yY2hlc3RyYS9jb21tb24vanMvbGliL2NoYXJ0anMtY29uZi5qcyJdLCJuYW1lcyI6WyJTY3JpcHQiLCJkb3VnaG51dERhdGEiLCJ2YWx1ZSIsImNvbG9yIiwibGluZUNoYXJ0RGF0YSIsImxhYmVscyIsImRhdGFzZXRzIiwiZmlsbENvbG9yIiwic3Ryb2tlQ29sb3IiLCJwb2ludENvbG9yIiwicG9pbnRTdHJva2VDb2xvciIsImRhdGEiLCJwaWVEYXRhIiwiYmFyQ2hhcnREYXRhIiwiY2hhcnREYXRhIiwiTWF0aCIsInJhbmRvbSIsInJhZGFyQ2hhcnREYXRhIiwiQ2hhcnQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiZ2V0Q29udGV4dCIsIkRvdWdobnV0IiwiTGluZSIsIlJhZGFyIiwiUG9sYXJBcmVhIiwiQmFyIiwiUGllIl0sIm1hcHBpbmdzIjoiQUFBQSxHQUFJQSxRQUFTLFdBR1QsR0FBSUMsS0FFSUMsTUFBTyxHQUNQQyxNQUFNLFlBR05ELE1BQVEsR0FDUkMsTUFBUSxZQUdSRCxNQUFRLElBQ1JDLE1BQVEsWUFHUkQsTUFBUSxHQUNSQyxNQUFRLFlBR1JELE1BQVEsSUFDUkMsTUFBUSxZQUlaQyxHQUNBQyxRQUFVLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLElBQzVCQyxXQUVRQyxVQUFZLHdCQUNaQyxZQUFjLHNCQUNkQyxXQUFhLHNCQUNiQyxpQkFBbUIsT0FDbkJDLE1BQVEsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsTUFHMUJKLFVBQVksd0JBQ1pDLFlBQWMsc0JBQ2RDLFdBQWEsc0JBQ2JDLGlCQUFtQixPQUNuQkMsTUFBUSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxRQUtsQ0MsSUFFSVYsTUFBTyxHQUNQQyxNQUFNLFlBR05ELE1BQVEsR0FDUkMsTUFBUSxZQUdSRCxNQUFRLElBQ1JDLE1BQVEsWUFJWlUsR0FDQVIsUUFBVSxVQUFVLFdBQVcsUUFBUSxRQUFRLE1BQU0sT0FBTyxRQUM1REMsV0FFUUMsVUFBWSx3QkFDWkMsWUFBYyxzQkFDZEcsTUFBUSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxNQUcxQkosVUFBWSx3QkFDWkMsWUFBYyxzQkFDZEcsTUFBUSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxRQUtsQ0csSUFFSVosTUFBUWEsS0FBS0MsU0FDYmIsTUFBTyxZQUdQRCxNQUFRYSxLQUFLQyxTQUNiYixNQUFPLFlBR1BELE1BQVFhLEtBQUtDLFNBQ2JiLE1BQU8sWUFHUEQsTUFBUWEsS0FBS0MsU0FDYmIsTUFBTyxZQUdQRCxNQUFRYSxLQUFLQyxTQUNiYixNQUFPLFlBR1BELE1BQVFhLEtBQUtDLFNBQ2JiLE1BQU8sWUFHWGMsR0FDQVosUUFBVSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxJQUM1QkMsV0FFUUMsVUFBWSx3QkFDWkMsWUFBYyxzQkFDZEMsV0FBYSxzQkFDYkMsaUJBQW1CLE9BQ25CQyxNQUFRLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLE1BRzFCSixVQUFZLHdCQUNaQyxZQUFjLHNCQUNkQyxXQUFhLHNCQUNiQyxpQkFBbUIsT0FDbkJDLE1BQVEsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsT0FLdEMsSUFBSU8sT0FBTUMsU0FBU0MsZUFBZSxZQUFZQyxXQUFXLE9BQU9DLFNBQVNyQixHQUN6RSxHQUFJaUIsT0FBTUMsU0FBU0MsZUFBZSxRQUFRQyxXQUFXLE9BQU9FLEtBQUtuQixHQUNqRSxHQUFJYyxPQUFNQyxTQUFTQyxlQUFlLFNBQVNDLFdBQVcsT0FBT0csTUFBTVAsR0FDbkUsR0FBSUMsT0FBTUMsU0FBU0MsZUFBZSxhQUFhQyxXQUFXLE9BQU9JLFVBQVVYLEdBQzNFLEdBQUlJLE9BQU1DLFNBQVNDLGVBQWUsT0FBT0MsV0FBVyxPQUFPSyxJQUFJYixHQUMvRCxHQUFJSyxPQUFNQyxTQUFTQyxlQUFlLE9BQU9DLFdBQVcsT0FBT00sSUFBSWYiLCJmaWxlIjoib3JjaGVzdHJhL2NvbW1vbi9qcy9saWIvY2hhcnRqcy1jb25mLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBTY3JpcHQgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG5cclxuICAgIHZhciBkb3VnaG51dERhdGEgPSBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB2YWx1ZTogMzAsXHJcbiAgICAgICAgICAgIGNvbG9yOlwiIzFhYmM5Y1wiXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHZhbHVlIDogNTAsXHJcbiAgICAgICAgICAgIGNvbG9yIDogXCIjMmVjYzcxXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFsdWUgOiAxMDAsXHJcbiAgICAgICAgICAgIGNvbG9yIDogXCIjMzQ5OGRiXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFsdWUgOiA0MCxcclxuICAgICAgICAgICAgY29sb3IgOiBcIiM5YjU5YjZcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB2YWx1ZSA6IDEyMCxcclxuICAgICAgICAgICAgY29sb3IgOiBcIiMzNDQ5NWVcIlxyXG4gICAgICAgIH1cclxuXHJcbiAgICBdO1xyXG4gICAgdmFyIGxpbmVDaGFydERhdGEgPSB7XHJcbiAgICAgICAgbGFiZWxzIDogW1wiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCJdLFxyXG4gICAgICAgIGRhdGFzZXRzIDogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBmaWxsQ29sb3IgOiBcInJnYmEoMjIwLDIyMCwyMjAsMC41KVwiLFxyXG4gICAgICAgICAgICAgICAgc3Ryb2tlQ29sb3IgOiBcInJnYmEoMjIwLDIyMCwyMjAsMSlcIixcclxuICAgICAgICAgICAgICAgIHBvaW50Q29sb3IgOiBcInJnYmEoMjIwLDIyMCwyMjAsMSlcIixcclxuICAgICAgICAgICAgICAgIHBvaW50U3Ryb2tlQ29sb3IgOiBcIiNmZmZcIixcclxuICAgICAgICAgICAgICAgIGRhdGEgOiBbNjUsNTksOTAsODEsNTYsNTUsNDBdXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGZpbGxDb2xvciA6IFwicmdiYSgxNTEsMTg3LDIwNSwwLjUpXCIsXHJcbiAgICAgICAgICAgICAgICBzdHJva2VDb2xvciA6IFwicmdiYSgxNTEsMTg3LDIwNSwxKVwiLFxyXG4gICAgICAgICAgICAgICAgcG9pbnRDb2xvciA6IFwicmdiYSgxNTEsMTg3LDIwNSwxKVwiLFxyXG4gICAgICAgICAgICAgICAgcG9pbnRTdHJva2VDb2xvciA6IFwiI2ZmZlwiLFxyXG4gICAgICAgICAgICAgICAgZGF0YSA6IFsyOCw0OCw0MCwxOSw5NiwyNywxMDBdXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcblxyXG4gICAgfTtcclxuICAgIHZhciBwaWVEYXRhID0gW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFsdWU6IDMwLFxyXG4gICAgICAgICAgICBjb2xvcjpcIiMxYWJjOWNcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB2YWx1ZSA6IDUwLFxyXG4gICAgICAgICAgICBjb2xvciA6IFwiIzE2YTA4NVwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHZhbHVlIDogMTAwLFxyXG4gICAgICAgICAgICBjb2xvciA6IFwiIzI3YWU2MFwiXHJcbiAgICAgICAgfVxyXG5cclxuICAgIF07XHJcbiAgICB2YXIgYmFyQ2hhcnREYXRhID0ge1xyXG4gICAgICAgIGxhYmVscyA6IFtcIkphbnVhcnlcIixcIkZlYnJ1YXJ5XCIsXCJNYXJjaFwiLFwiQXByaWxcIixcIk1heVwiLFwiSnVuZVwiLFwiSnVseVwiXSxcclxuICAgICAgICBkYXRhc2V0cyA6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgZmlsbENvbG9yIDogXCJyZ2JhKDIyMCwyMjAsMjIwLDAuNSlcIixcclxuICAgICAgICAgICAgICAgIHN0cm9rZUNvbG9yIDogXCJyZ2JhKDIyMCwyMjAsMjIwLDEpXCIsXHJcbiAgICAgICAgICAgICAgICBkYXRhIDogWzY1LDU5LDkwLDgxLDU2LDU1LDQwXVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBmaWxsQ29sb3IgOiBcInJnYmEoMTUxLDE4NywyMDUsMC41KVwiLFxyXG4gICAgICAgICAgICAgICAgc3Ryb2tlQ29sb3IgOiBcInJnYmEoMTUxLDE4NywyMDUsMSlcIixcclxuICAgICAgICAgICAgICAgIGRhdGEgOiBbMjgsNDgsNDAsMTksOTYsMjcsMTAwXVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG5cclxuICAgIH07XHJcbiAgICB2YXIgY2hhcnREYXRhID0gW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFsdWUgOiBNYXRoLnJhbmRvbSgpLFxyXG4gICAgICAgICAgICBjb2xvcjogXCIjRDk3MDQxXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFsdWUgOiBNYXRoLnJhbmRvbSgpLFxyXG4gICAgICAgICAgICBjb2xvcjogXCIjQzc2MDRDXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFsdWUgOiBNYXRoLnJhbmRvbSgpLFxyXG4gICAgICAgICAgICBjb2xvcjogXCIjMjEzMjNEXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFsdWUgOiBNYXRoLnJhbmRvbSgpLFxyXG4gICAgICAgICAgICBjb2xvcjogXCIjOUQ5QjdGXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFsdWUgOiBNYXRoLnJhbmRvbSgpLFxyXG4gICAgICAgICAgICBjb2xvcjogXCIjN0Q0RjZEXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFsdWUgOiBNYXRoLnJhbmRvbSgpLFxyXG4gICAgICAgICAgICBjb2xvcjogXCIjNTg0QTVFXCJcclxuICAgICAgICB9XHJcbiAgICBdO1xyXG4gICAgdmFyIHJhZGFyQ2hhcnREYXRhID0ge1xyXG4gICAgICAgIGxhYmVscyA6IFtcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiXSxcclxuICAgICAgICBkYXRhc2V0cyA6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgZmlsbENvbG9yIDogXCJyZ2JhKDIyMCwyMjAsMjIwLDAuNSlcIixcclxuICAgICAgICAgICAgICAgIHN0cm9rZUNvbG9yIDogXCJyZ2JhKDIyMCwyMjAsMjIwLDEpXCIsXHJcbiAgICAgICAgICAgICAgICBwb2ludENvbG9yIDogXCJyZ2JhKDIyMCwyMjAsMjIwLDEpXCIsXHJcbiAgICAgICAgICAgICAgICBwb2ludFN0cm9rZUNvbG9yIDogXCIjZmZmXCIsXHJcbiAgICAgICAgICAgICAgICBkYXRhIDogWzY1LDU5LDkwLDgxLDU2LDU1LDQwXVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBmaWxsQ29sb3IgOiBcInJnYmEoMTUxLDE4NywyMDUsMC41KVwiLFxyXG4gICAgICAgICAgICAgICAgc3Ryb2tlQ29sb3IgOiBcInJnYmEoMTUxLDE4NywyMDUsMSlcIixcclxuICAgICAgICAgICAgICAgIHBvaW50Q29sb3IgOiBcInJnYmEoMTUxLDE4NywyMDUsMSlcIixcclxuICAgICAgICAgICAgICAgIHBvaW50U3Ryb2tlQ29sb3IgOiBcIiNmZmZcIixcclxuICAgICAgICAgICAgICAgIGRhdGEgOiBbMjgsNDgsNDAsMTksOTYsMjcsMTAwXVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG5cclxuICAgIH07XHJcbiAgICBuZXcgQ2hhcnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkb3VnaG51dFwiKS5nZXRDb250ZXh0KFwiMmRcIikpLkRvdWdobnV0KGRvdWdobnV0RGF0YSk7XHJcbiAgICBuZXcgQ2hhcnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsaW5lXCIpLmdldENvbnRleHQoXCIyZFwiKSkuTGluZShsaW5lQ2hhcnREYXRhKTtcclxuICAgIG5ldyBDaGFydChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJhZGFyXCIpLmdldENvbnRleHQoXCIyZFwiKSkuUmFkYXIocmFkYXJDaGFydERhdGEpO1xyXG4gICAgbmV3IENoYXJ0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicG9sYXJBcmVhXCIpLmdldENvbnRleHQoXCIyZFwiKSkuUG9sYXJBcmVhKGNoYXJ0RGF0YSk7XHJcbiAgICBuZXcgQ2hhcnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYXJcIikuZ2V0Q29udGV4dChcIjJkXCIpKS5CYXIoYmFyQ2hhcnREYXRhKTtcclxuICAgIG5ldyBDaGFydChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBpZVwiKS5nZXRDb250ZXh0KFwiMmRcIikpLlBpZShwaWVEYXRhKTtcclxuXHJcblxyXG59KCk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
