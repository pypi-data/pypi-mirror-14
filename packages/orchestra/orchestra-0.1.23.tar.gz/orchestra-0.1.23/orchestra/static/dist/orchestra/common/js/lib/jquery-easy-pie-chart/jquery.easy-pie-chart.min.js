(function(){!function(t){t.easyPieChart=function(n,i){var e,o,a,s,r,c,l,p=this;return this.el=n,this.$el=t(n),this.$el.data("easyPieChart",this),this.init=function(){var n;return p.options=t.extend({},t.easyPieChart.defaultOptions,i),n=parseInt(p.$el.data("percent"),10),p.percentage=0,p.canvas=t("<canvas width='"+p.options.size+"' height='"+p.options.size+"'></canvas>").get(0),p.$el.append(p.canvas),"undefined"!=typeof G_vmlCanvasManager&&null!==G_vmlCanvasManager&&G_vmlCanvasManager.initElement(p.canvas),p.ctx=p.canvas.getContext("2d"),window.devicePixelRatio>1.5&&(t(p.canvas).css({width:p.options.size,height:p.options.size}),p.canvas.width*=2,p.canvas.height*=2,p.ctx.scale(2,2)),p.ctx.translate(p.options.size/2,p.options.size/2),p.$el.addClass("easyPieChart"),p.$el.css({width:p.options.size,height:p.options.size,lineHeight:""+p.options.size+"px"}),p.update(n),p},this.update=function(t){return p.options.animate===!1?a(t):o(p.percentage,t)},c=function(){var t,n,i;for(p.ctx.fillStyle=p.options.scaleColor,p.ctx.lineWidth=1,i=[],t=n=0;24>=n;t=++n)i.push(e(t));return i},e=function(t){var n;return n=t%6===0?0:.017*p.options.size,p.ctx.save(),p.ctx.rotate(t*Math.PI/12),p.ctx.fillRect(p.options.size/2-n,0,.05*-p.options.size+n,1),p.ctx.restore()},l=function(){var t;return t=p.options.size/2-p.options.lineWidth/2,p.options.scaleColor!==!1&&(t-=.08*p.options.size),p.ctx.beginPath(),p.ctx.arc(0,0,t,0,2*Math.PI,!0),p.ctx.closePath(),p.ctx.strokeStyle=p.options.trackColor,p.ctx.lineWidth=p.options.lineWidth,p.ctx.stroke()},r=function(){return p.options.scaleColor!==!1&&c(),p.options.trackColor!==!1?l():void 0},a=function(n){var i;return r(),p.ctx.strokeStyle=t.isFunction(p.options.barColor)?p.options.barColor(n):p.options.barColor,p.ctx.lineCap=p.options.lineCap,p.ctx.lineWidth=p.options.lineWidth,i=p.options.size/2-p.options.lineWidth/2,p.options.scaleColor!==!1&&(i-=.08*p.options.size),p.ctx.save(),p.ctx.rotate(-Math.PI/2),p.ctx.beginPath(),p.ctx.arc(0,0,i,0,2*Math.PI*n/100,!1),p.ctx.stroke(),p.ctx.restore()},o=function(t,n){var i,e,o;return e=30,o=e*p.options.animate/1e3,i=0,p.options.onStart.call(p),p.percentage=n,p.animation&&(clearInterval(p.animation),p.animation=!1),p.animation=setInterval(function(){return p.ctx.clearRect(-p.options.size/2,-p.options.size/2,p.options.size,p.options.size),r.call(p),a.call(p,[s(i,t,n-t,o)]),i++,i/o>1?(clearInterval(p.animation),p.animation=!1,p.options.onStop.call(p)):void 0},1e3/e)},s=function(t,n,i,e){var o,a;return o=function(t){return Math.pow(t,2)},a=function(t){return 1>t?o(t):2-o(t/2*-2+2)},t/=e/2,i/2*a(t)+n},this.init()},t.easyPieChart.defaultOptions={barColor:"#ef1e25",trackColor:"#f2f2f2",scaleColor:"#dfe0e0",lineCap:"round",size:110,lineWidth:3,animate:!1,onStart:t.noop,onStop:t.noop},t.fn.easyPieChart=function(n){return t.each(this,function(i,e){var o;return o=t(e),o.data("easyPieChart")?void 0:o.data("easyPieChart",new t.easyPieChart(e,n))})}}(jQuery)}).call(this);
//# sourceMappingURL=data:application/json;base64,
