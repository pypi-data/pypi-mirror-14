[[about]]
= About

[partintro]
--

Like a museum curator manages the exhibits and collections on display,
Elasticsearch Curator helps you curate, or manage your Elasticsearch indices.
--

== Origin

Curator was first called
https://logstash.jira.com/browse/LOGSTASH-211[`clearESindices.py`].  Its sole
function was to delete indices. It was almost immediately renamed to
https://logstash.jira.com/browse/LOGSTASH-211[`logstash_index_cleaner.py`].
After a time it was briefly relocated under the
https://github.com/elastic/logstash[logstash] repository as
`expire_logs`, at which point it began to gain new functionality.  Soon
thereafter, Jordan Sissel was hired by Elastic (then still Elasticsearch), as
was the original author of Curator.  Not long after that it became Elasticsearch
Curator and is now hosted at https://github.com/elastic/curator

Curator now performs many operations on your Elasticsearch indices, from delete
to snapshot to shard allocation routing.

== Features

Curator allows for many different operations to be performed to both indices and
snapshots, including:

* Add or remove indices from an <<alias,alias>>
* Shard routing <<allocation,allocation>>
* Disabling <<bloom,Bloom>> filter caches (for versions of Elasticsearch < 1.4)
* <<close,Close>> indices
* <<delete,Delete>> indices and snapshots
* <<open,Open>> closed indices
* <<optimize,Optimize>> indices
* Change the number of <<replicas,replicas>> per shard for indices
* <<show,Show>> indices and snapshots
* Take a <<snapshot,snapshot>> (backup) of indices.

[[about-cli]]
== Command-Line Interface (CLI)

Curator has always been a command-line tool. When Curator 2.0 was released, it
was the first attempt to separate the <<about-api,API>> from the CLI.

This site provides the documentation for how to use Curator on the command-line.

TIP: Learn more about <<command-line,the command-line interface>>.

[[about-api]]
== Application Program Interface (API)

Since version 2.0, Curator ships with both an API and wrapper scripts (which are
actually defined as entry points).  The API, or Application Program Interface,
allows you to write your own scripts to accomplish similar goals--or even new
and different things--with the same code that Curator uses.

The API documentation is not on this site, but is available at
http://curator.readthedocs.org/.  The Curator API is built using
the
http://www.elastic.co/guide/en/elasticsearch/client/python-api/current/index.html[Elasticsearch
Python API].

[[license]]
== License

Copyright 2011â€“2015 Elastic <http://elastic.co> and contributors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


[[site-corrections]]
== Site Corrections

All documentation on this site allows for quick correction submission.

To do this, use the "Edit" link to the right on any page.

* You will need to log in with your GitHub account.
* Make your corrections or additions to the documentation.
* Please use the option to "Create a new branch for this commit and start a pull
request."
* Please make sure you have signed our
http://www.elastic.co/contributor-agreement/[Contributor License Agreement]. We
are not asking you to assign copyright to us, but to give us the right to
distribute your code (even documentation corrections) without restriction. We
ask this of all contributors in order to assure our users of the origin and
continuing existence of the code. You only need to sign the CLA once. If you are
uncomfortable with this, feel free to submit a
https://github.com/elastic/curator/issues[GitHub Issue] with your suggested
correction instead.
* Changes will be reviewed and merged, if acceptable.
