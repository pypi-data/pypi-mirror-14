# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grr/proto/config_file.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import grr.proto.jobs_pb2
import grr.proto.semantic_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='grr/proto/config_file.proto',
  package='',
  serialized_pb=_b('\n\x1bgrr/proto/config_file.proto\x1a\x14grr/proto/jobs.proto\x1a\x18grr/proto/semantic.proto\"\xa0\x03\n\tLogTarget\x12@\n\x08\x66\x61\x63ility\x18\x01 \x01(\tB.\xe2\xfc\xe3\xc4\x01(\x12&What log types this target applies to.\x12\x45\n\x08priority\x18\x02 \x01(\tB3\xe2\xfc\xe3\xc4\x01-\x12+What log priorities this target applies to.\x12W\n\ttransport\x18\x03 \x01(\x0e\x32\x17.LogTarget.LogTransportB+\xe2\xfc\xe3\xc4\x01%\x12#How logs are sent to a destination.\x12\x34\n\x0b\x64\x65stination\x18\x04 \x01(\tB\x1f\xe2\xfc\xe3\xc4\x01\x19\x12\x17Where logs are sent to.\"{\n\x0cLogTransport\x12\x19\n\x15UNKNOWN_LOG_TRANSPORT\x10\x00\x12\x08\n\x04NONE\x10\x01\x12\x08\n\x04\x46ILE\x10\x02\x12\x07\n\x03UDP\x10\x03\x12\x07\n\x03TCP\x10\x04\x12\x08\n\x04PIPE\x10\x05\x12\n\n\x06SCRIPT\x10\x06\x12\n\n\x06MODULE\x10\x07\x12\x08\n\x04WALL\x10\x08\"B\n\tLogConfig\x12\x35\n\x07targets\x18\x01 \x03(\x0b\x32\n.LogTargetB\x18\xe2\xfc\xe3\xc4\x01\x12\x12\x10Logging targets.\"*\n\tNfsClient\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0f\n\x07options\x18\x02 \x03(\t\"I\n\tNfsExport\x12\r\n\x05share\x18\x01 \x01(\t\x12\x10\n\x08\x64\x65\x66\x61ults\x18\x02 \x03(\t\x12\x1b\n\x07\x63lients\x18\x03 \x03(\x0b\x32\n.NfsClient\"\xa1\x01\n\x0eSshdMatchBlock\x12?\n\tcriterion\x18\x01 \x01(\tB,\xe2\xfc\xe3\xc4\x01&\x12$Criteria that trigger a match block.\x12N\n\x06\x63onfig\x18\x02 \x01(\x0b\x32\x0f.AttributedDictB-\xe2\xfc\xe3\xc4\x01\'\x12%The configuration of the match block.\"\x94\x01\n\nSshdConfig\x12\x45\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x0f.AttributedDictB$\xe2\xfc\xe3\xc4\x01\x1e\x12\x1cThe main sshd configuration.\x12?\n\x07matches\x18\x02 \x03(\x0b\x32\x0f.SshdMatchBlockB\x1d\xe2\xfc\xe3\xc4\x01\x17\x12\x15Match block sections.\"\xe0\x04\n\tNtpConfig\x12\x44\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x0f.AttributedDictB#\xe2\xfc\xe3\xc4\x01\x1d\x12\x1bThe main ntp configuration.\x12G\n\x06server\x18\x02 \x03(\x0b\x32\x0f.AttributedDictB&\xe2\xfc\xe3\xc4\x01 \x12\x1eserver keyword configurations.\x12K\n\x08restrict\x18\x03 \x03(\x0b\x32\x0f.AttributedDictB(\xe2\xfc\xe3\xc4\x01\"\x12 restrict keyword configurations.\x12\x45\n\x05\x66udge\x18\x04 \x03(\x0b\x32\x0f.AttributedDictB%\xe2\xfc\xe3\xc4\x01\x1f\x12\x1d\x66udge keyword configurations.\x12\x43\n\x04trap\x18\x05 \x03(\x0b\x32\x0f.AttributedDictB$\xe2\xfc\xe3\xc4\x01\x1e\x12\x1ctrap keyword configurations.\x12\x43\n\x04peer\x18\x06 \x03(\x0b\x32\x0f.AttributedDictB$\xe2\xfc\xe3\xc4\x01\x1e\x12\x1cpeer keyword configurations.\x12M\n\tbroadcast\x18\x07 \x03(\x0b\x32\x0f.AttributedDictB)\xe2\xfc\xe3\xc4\x01#\x12!broadcast keyword configurations.\x12W\n\x0emanycastclient\x18\x08 \x03(\x0b\x32\x0f.AttributedDictB.\xe2\xfc\xe3\xc4\x01(\x12&manycastclient keyword configurations.\"\xbc\x02\n\x0ePamConfigEntry\x12?\n\x07service\x18\x01 \x01(\tB.\xe2\xfc\xe3\xc4\x01(\x12&The service name the entry belongs to.\x12.\n\x04type\x18\x02 \x01(\tB \xe2\xfc\xe3\xc4\x01\x1a\x12\x18The type for this entry.\x12<\n\x07\x63ontrol\x18\x03 \x01(\tB+\xe2\xfc\xe3\xc4\x01%\x12#The behavior of PAM for this entry.\x12<\n\x0bmodule_path\x18\x04 \x01(\tB\'\xe2\xfc\xe3\xc4\x01!\x12\x1fThe filepath to the PAM module.\x12=\n\x0bmodule_args\x18\x05 \x01(\tB(\xe2\xfc\xe3\xc4\x01\"\x12 The arguments to the PAM module.\"\xbc\x01\n\tPamConfig\x12]\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x0f.PamConfigEntryB;\xe2\xfc\xe3\xc4\x01\x35\x12\x33\x41 list of the enumerated PAM configuration entries.\x12P\n\x0f\x65xternal_config\x18\x02 \x03(\tB7\xe2\xfc\xe3\xc4\x01\x31\x12/Details of references to external config files.')
  ,
  dependencies=[grr.proto.jobs_pb2.DESCRIPTOR,grr.proto.semantic_pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_LOGTARGET_LOGTRANSPORT = _descriptor.EnumDescriptor(
  name='LogTransport',
  full_name='LogTarget.LogTransport',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_LOG_TRANSPORT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NONE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UDP', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TCP', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PIPE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCRIPT', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MODULE', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WALL', index=8, number=8,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=373,
  serialized_end=496,
)
_sym_db.RegisterEnumDescriptor(_LOGTARGET_LOGTRANSPORT)


_LOGTARGET = _descriptor.Descriptor(
  name='LogTarget',
  full_name='LogTarget',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='facility', full_name='LogTarget.facility', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001(\022&What log types this target applies to.'))),
    _descriptor.FieldDescriptor(
      name='priority', full_name='LogTarget.priority', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001-\022+What log priorities this target applies to.'))),
    _descriptor.FieldDescriptor(
      name='transport', full_name='LogTarget.transport', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001%\022#How logs are sent to a destination.'))),
    _descriptor.FieldDescriptor(
      name='destination', full_name='LogTarget.destination', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\031\022\027Where logs are sent to.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LOGTARGET_LOGTRANSPORT,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=80,
  serialized_end=496,
)


_LOGCONFIG = _descriptor.Descriptor(
  name='LogConfig',
  full_name='LogConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='targets', full_name='LogConfig.targets', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\022\022\020Logging targets.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=498,
  serialized_end=564,
)


_NFSCLIENT = _descriptor.Descriptor(
  name='NfsClient',
  full_name='NfsClient',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='host', full_name='NfsClient.host', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='options', full_name='NfsClient.options', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=566,
  serialized_end=608,
)


_NFSEXPORT = _descriptor.Descriptor(
  name='NfsExport',
  full_name='NfsExport',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='share', full_name='NfsExport.share', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='defaults', full_name='NfsExport.defaults', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='clients', full_name='NfsExport.clients', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=610,
  serialized_end=683,
)


_SSHDMATCHBLOCK = _descriptor.Descriptor(
  name='SshdMatchBlock',
  full_name='SshdMatchBlock',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='criterion', full_name='SshdMatchBlock.criterion', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001&\022$Criteria that trigger a match block.'))),
    _descriptor.FieldDescriptor(
      name='config', full_name='SshdMatchBlock.config', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\'\022%The configuration of the match block.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=686,
  serialized_end=847,
)


_SSHDCONFIG = _descriptor.Descriptor(
  name='SshdConfig',
  full_name='SshdConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='config', full_name='SshdConfig.config', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\036\022\034The main sshd configuration.'))),
    _descriptor.FieldDescriptor(
      name='matches', full_name='SshdConfig.matches', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\027\022\025Match block sections.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=850,
  serialized_end=998,
)


_NTPCONFIG = _descriptor.Descriptor(
  name='NtpConfig',
  full_name='NtpConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='config', full_name='NtpConfig.config', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\035\022\033The main ntp configuration.'))),
    _descriptor.FieldDescriptor(
      name='server', full_name='NtpConfig.server', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001 \022\036server keyword configurations.'))),
    _descriptor.FieldDescriptor(
      name='restrict', full_name='NtpConfig.restrict', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\"\022 restrict keyword configurations.'))),
    _descriptor.FieldDescriptor(
      name='fudge', full_name='NtpConfig.fudge', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\037\022\035fudge keyword configurations.'))),
    _descriptor.FieldDescriptor(
      name='trap', full_name='NtpConfig.trap', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\036\022\034trap keyword configurations.'))),
    _descriptor.FieldDescriptor(
      name='peer', full_name='NtpConfig.peer', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\036\022\034peer keyword configurations.'))),
    _descriptor.FieldDescriptor(
      name='broadcast', full_name='NtpConfig.broadcast', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001#\022!broadcast keyword configurations.'))),
    _descriptor.FieldDescriptor(
      name='manycastclient', full_name='NtpConfig.manycastclient', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001(\022&manycastclient keyword configurations.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1001,
  serialized_end=1609,
)


_PAMCONFIGENTRY = _descriptor.Descriptor(
  name='PamConfigEntry',
  full_name='PamConfigEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service', full_name='PamConfigEntry.service', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001(\022&The service name the entry belongs to.'))),
    _descriptor.FieldDescriptor(
      name='type', full_name='PamConfigEntry.type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\032\022\030The type for this entry.'))),
    _descriptor.FieldDescriptor(
      name='control', full_name='PamConfigEntry.control', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001%\022#The behavior of PAM for this entry.'))),
    _descriptor.FieldDescriptor(
      name='module_path', full_name='PamConfigEntry.module_path', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001!\022\037The filepath to the PAM module.'))),
    _descriptor.FieldDescriptor(
      name='module_args', full_name='PamConfigEntry.module_args', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\"\022 The arguments to the PAM module.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1612,
  serialized_end=1928,
)


_PAMCONFIG = _descriptor.Descriptor(
  name='PamConfig',
  full_name='PamConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entries', full_name='PamConfig.entries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0015\0223A list of the enumerated PAM configuration entries.'))),
    _descriptor.FieldDescriptor(
      name='external_config', full_name='PamConfig.external_config', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0011\022/Details of references to external config files.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1931,
  serialized_end=2119,
)

_LOGTARGET.fields_by_name['transport'].enum_type = _LOGTARGET_LOGTRANSPORT
_LOGTARGET_LOGTRANSPORT.containing_type = _LOGTARGET
_LOGCONFIG.fields_by_name['targets'].message_type = _LOGTARGET
_NFSEXPORT.fields_by_name['clients'].message_type = _NFSCLIENT
_SSHDMATCHBLOCK.fields_by_name['config'].message_type = grr.proto.jobs_pb2._ATTRIBUTEDDICT
_SSHDCONFIG.fields_by_name['config'].message_type = grr.proto.jobs_pb2._ATTRIBUTEDDICT
_SSHDCONFIG.fields_by_name['matches'].message_type = _SSHDMATCHBLOCK
_NTPCONFIG.fields_by_name['config'].message_type = grr.proto.jobs_pb2._ATTRIBUTEDDICT
_NTPCONFIG.fields_by_name['server'].message_type = grr.proto.jobs_pb2._ATTRIBUTEDDICT
_NTPCONFIG.fields_by_name['restrict'].message_type = grr.proto.jobs_pb2._ATTRIBUTEDDICT
_NTPCONFIG.fields_by_name['fudge'].message_type = grr.proto.jobs_pb2._ATTRIBUTEDDICT
_NTPCONFIG.fields_by_name['trap'].message_type = grr.proto.jobs_pb2._ATTRIBUTEDDICT
_NTPCONFIG.fields_by_name['peer'].message_type = grr.proto.jobs_pb2._ATTRIBUTEDDICT
_NTPCONFIG.fields_by_name['broadcast'].message_type = grr.proto.jobs_pb2._ATTRIBUTEDDICT
_NTPCONFIG.fields_by_name['manycastclient'].message_type = grr.proto.jobs_pb2._ATTRIBUTEDDICT
_PAMCONFIG.fields_by_name['entries'].message_type = _PAMCONFIGENTRY
DESCRIPTOR.message_types_by_name['LogTarget'] = _LOGTARGET
DESCRIPTOR.message_types_by_name['LogConfig'] = _LOGCONFIG
DESCRIPTOR.message_types_by_name['NfsClient'] = _NFSCLIENT
DESCRIPTOR.message_types_by_name['NfsExport'] = _NFSEXPORT
DESCRIPTOR.message_types_by_name['SshdMatchBlock'] = _SSHDMATCHBLOCK
DESCRIPTOR.message_types_by_name['SshdConfig'] = _SSHDCONFIG
DESCRIPTOR.message_types_by_name['NtpConfig'] = _NTPCONFIG
DESCRIPTOR.message_types_by_name['PamConfigEntry'] = _PAMCONFIGENTRY
DESCRIPTOR.message_types_by_name['PamConfig'] = _PAMCONFIG

LogTarget = _reflection.GeneratedProtocolMessageType('LogTarget', (_message.Message,), dict(
  DESCRIPTOR = _LOGTARGET,
  __module__ = 'grr.proto.config_file_pb2'
  # @@protoc_insertion_point(class_scope:LogTarget)
  ))
_sym_db.RegisterMessage(LogTarget)

LogConfig = _reflection.GeneratedProtocolMessageType('LogConfig', (_message.Message,), dict(
  DESCRIPTOR = _LOGCONFIG,
  __module__ = 'grr.proto.config_file_pb2'
  # @@protoc_insertion_point(class_scope:LogConfig)
  ))
_sym_db.RegisterMessage(LogConfig)

NfsClient = _reflection.GeneratedProtocolMessageType('NfsClient', (_message.Message,), dict(
  DESCRIPTOR = _NFSCLIENT,
  __module__ = 'grr.proto.config_file_pb2'
  # @@protoc_insertion_point(class_scope:NfsClient)
  ))
_sym_db.RegisterMessage(NfsClient)

NfsExport = _reflection.GeneratedProtocolMessageType('NfsExport', (_message.Message,), dict(
  DESCRIPTOR = _NFSEXPORT,
  __module__ = 'grr.proto.config_file_pb2'
  # @@protoc_insertion_point(class_scope:NfsExport)
  ))
_sym_db.RegisterMessage(NfsExport)

SshdMatchBlock = _reflection.GeneratedProtocolMessageType('SshdMatchBlock', (_message.Message,), dict(
  DESCRIPTOR = _SSHDMATCHBLOCK,
  __module__ = 'grr.proto.config_file_pb2'
  # @@protoc_insertion_point(class_scope:SshdMatchBlock)
  ))
_sym_db.RegisterMessage(SshdMatchBlock)

SshdConfig = _reflection.GeneratedProtocolMessageType('SshdConfig', (_message.Message,), dict(
  DESCRIPTOR = _SSHDCONFIG,
  __module__ = 'grr.proto.config_file_pb2'
  # @@protoc_insertion_point(class_scope:SshdConfig)
  ))
_sym_db.RegisterMessage(SshdConfig)

NtpConfig = _reflection.GeneratedProtocolMessageType('NtpConfig', (_message.Message,), dict(
  DESCRIPTOR = _NTPCONFIG,
  __module__ = 'grr.proto.config_file_pb2'
  # @@protoc_insertion_point(class_scope:NtpConfig)
  ))
_sym_db.RegisterMessage(NtpConfig)

PamConfigEntry = _reflection.GeneratedProtocolMessageType('PamConfigEntry', (_message.Message,), dict(
  DESCRIPTOR = _PAMCONFIGENTRY,
  __module__ = 'grr.proto.config_file_pb2'
  # @@protoc_insertion_point(class_scope:PamConfigEntry)
  ))
_sym_db.RegisterMessage(PamConfigEntry)

PamConfig = _reflection.GeneratedProtocolMessageType('PamConfig', (_message.Message,), dict(
  DESCRIPTOR = _PAMCONFIG,
  __module__ = 'grr.proto.config_file_pb2'
  # @@protoc_insertion_point(class_scope:PamConfig)
  ))
_sym_db.RegisterMessage(PamConfig)


_LOGTARGET.fields_by_name['facility'].has_options = True
_LOGTARGET.fields_by_name['facility']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001(\022&What log types this target applies to.'))
_LOGTARGET.fields_by_name['priority'].has_options = True
_LOGTARGET.fields_by_name['priority']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001-\022+What log priorities this target applies to.'))
_LOGTARGET.fields_by_name['transport'].has_options = True
_LOGTARGET.fields_by_name['transport']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001%\022#How logs are sent to a destination.'))
_LOGTARGET.fields_by_name['destination'].has_options = True
_LOGTARGET.fields_by_name['destination']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\031\022\027Where logs are sent to.'))
_LOGCONFIG.fields_by_name['targets'].has_options = True
_LOGCONFIG.fields_by_name['targets']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\022\022\020Logging targets.'))
_SSHDMATCHBLOCK.fields_by_name['criterion'].has_options = True
_SSHDMATCHBLOCK.fields_by_name['criterion']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001&\022$Criteria that trigger a match block.'))
_SSHDMATCHBLOCK.fields_by_name['config'].has_options = True
_SSHDMATCHBLOCK.fields_by_name['config']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\'\022%The configuration of the match block.'))
_SSHDCONFIG.fields_by_name['config'].has_options = True
_SSHDCONFIG.fields_by_name['config']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\036\022\034The main sshd configuration.'))
_SSHDCONFIG.fields_by_name['matches'].has_options = True
_SSHDCONFIG.fields_by_name['matches']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\027\022\025Match block sections.'))
_NTPCONFIG.fields_by_name['config'].has_options = True
_NTPCONFIG.fields_by_name['config']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\035\022\033The main ntp configuration.'))
_NTPCONFIG.fields_by_name['server'].has_options = True
_NTPCONFIG.fields_by_name['server']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001 \022\036server keyword configurations.'))
_NTPCONFIG.fields_by_name['restrict'].has_options = True
_NTPCONFIG.fields_by_name['restrict']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\"\022 restrict keyword configurations.'))
_NTPCONFIG.fields_by_name['fudge'].has_options = True
_NTPCONFIG.fields_by_name['fudge']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\037\022\035fudge keyword configurations.'))
_NTPCONFIG.fields_by_name['trap'].has_options = True
_NTPCONFIG.fields_by_name['trap']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\036\022\034trap keyword configurations.'))
_NTPCONFIG.fields_by_name['peer'].has_options = True
_NTPCONFIG.fields_by_name['peer']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\036\022\034peer keyword configurations.'))
_NTPCONFIG.fields_by_name['broadcast'].has_options = True
_NTPCONFIG.fields_by_name['broadcast']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001#\022!broadcast keyword configurations.'))
_NTPCONFIG.fields_by_name['manycastclient'].has_options = True
_NTPCONFIG.fields_by_name['manycastclient']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001(\022&manycastclient keyword configurations.'))
_PAMCONFIGENTRY.fields_by_name['service'].has_options = True
_PAMCONFIGENTRY.fields_by_name['service']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001(\022&The service name the entry belongs to.'))
_PAMCONFIGENTRY.fields_by_name['type'].has_options = True
_PAMCONFIGENTRY.fields_by_name['type']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\032\022\030The type for this entry.'))
_PAMCONFIGENTRY.fields_by_name['control'].has_options = True
_PAMCONFIGENTRY.fields_by_name['control']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001%\022#The behavior of PAM for this entry.'))
_PAMCONFIGENTRY.fields_by_name['module_path'].has_options = True
_PAMCONFIGENTRY.fields_by_name['module_path']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001!\022\037The filepath to the PAM module.'))
_PAMCONFIGENTRY.fields_by_name['module_args'].has_options = True
_PAMCONFIGENTRY.fields_by_name['module_args']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\"\022 The arguments to the PAM module.'))
_PAMCONFIG.fields_by_name['entries'].has_options = True
_PAMCONFIG.fields_by_name['entries']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0015\0223A list of the enumerated PAM configuration entries.'))
_PAMCONFIG.fields_by_name['external_config'].has_options = True
_PAMCONFIG.fields_by_name['external_config']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0011\022/Details of references to external config files.'))
# @@protoc_insertion_point(module_scope)
