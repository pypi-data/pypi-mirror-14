/*!
  * Copyright 2014,  Digital Reasoning
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
*/

define(["jquery","knockout","ladda","bootbox","utils/utils","select2"],function(e,t,n,r,i){"use strict";return function(){var i=this;i.breadcrumbs=[{active:!1,title:"Formulas",href:"/formulas/"},{active:!0,title:"Import"}],i.uriSelector=e("#formulaUri"),i.uriSelector.select2({data:[],theme:"bootstrap",placeholder:"Select a formula...",disabled:!0}),i.uriSelector.on("select2:select",function(e){var t=e.params.data;i.uri(t.clone_url)}),i.uri=t.observable(),i.username=t.observable(),i.password=t.observable(),i.accessToken=t.observable(),i.usernameText=t.observable(),i.subscription=null,i.loadRepos=function(){e.ajax({method:"GET",url:"https://api.github.com/orgs/stackdio-formulas/repos"}).done(function(e){e.forEach(function(e){e.text=e.name}),i.uriSelector.select2({data:e.sort(function(e,t){return e.name<t.name?-1:e.name>t.name?1:0}),theme:"bootstrap",placeholder:"Select a formula...",disabled:!1,minimumInputLength:0,templateResult:function(e){return e.loading?e.text:e.description?e.name+" ("+e.description+")":e.name}})}).fail(function(){console.warn("Could not load default list of formulas: Github API rate limit exceeded");var t=e(".select2-container");t.attr({"data-toggle":"tooltip","data-placement":"top",title:"Could not load default list of formulas: Github API rate limit exceeded"}),t.tooltip()})},i.reset=function(){i.uri(""),i.username(""),i.password(""),i.accessToken.subscribe(function(e){e?i.usernameText("GitHub access token"):i.usernameText("Git username")}),i.accessToken(!1)},i.removeErrors=function(t){t.forEach(function(t){var n=e("#"+t);n.removeClass("has-error");var r=n.find(".help-block");r.remove()})},i.importFormula=function(){var t=["uri","username","password","access_token"];i.removeErrors(t);var s=n.create(document.querySelector("#import-button"));s.start(),e.ajax({method:"POST",url:"/api/formulas/",data:JSON.stringify({uri:i.uri(),git_username:i.username(),git_password:i.password(),access_token:i.accessToken()})}).always(function(){s.stop()}).done(function(){window.location="/formulas/"}).fail(function(n){var i="";try{var s=JSON.parse(n.responseText);for(var o in s)if(s.hasOwnProperty(o))if(t.indexOf(o)>=0){var u=e("#"+o);u.addClass("has-error"),s[o].forEach(function(e){u.append('<span class="help-block">'+e+"</span>")})}else if(o==="non_field_errors")s[o].forEach(function(t){if(t.indexOf("uri")>=0){var n=e("#uri");n.addClass("has-error"),n.append('<span class="help-block">A formula with this URI already exists.</span>')}});else{var a=o.replace("_"," ");s[o].forEach(function(e){i+="<dt>"+a+"</dt><dd>"+e+"</dd>"})}i&&(i='<dl class="dl-horizontal">'+i+"</dl>")}catch(f){i="Oops... there was a server error.  This has been reported to your administrators."}i&&r.alert({title:"Error importing formula",message:i})})},i.reset(),i.loadRepos()}});