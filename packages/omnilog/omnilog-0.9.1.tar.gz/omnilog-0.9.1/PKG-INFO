Metadata-Version: 1.1
Name: omnilog
Version: 0.9.1
Summary: A remote log watcher daemon that uses ssh, and multithreaded design.
Home-page: https://github.com/sandboxwebs/omnilog
Author: Eloy (sbw)
Author-email: eloy@sandboxwebs.com
License: GPLV3
Download-URL: https://github.com/sandboxwebs/omnilog/tarball/0.9.1
Description: OmniLog
        
        Introduction
        
        It was conceived with the idea on mind that not all IT infraestructures
        or applications have a well defined and centralized logging system. This cant be a 
        reason to not "listen" a those remote logs on that servers. Log reviews can be very 
        painfull if you dont have a tool like this on your toolbelt.
        
        
        
        With this application we can 'ssh in' all our servers simultaneously , get
        each line of those logs of interest and write it on local files, show 
        them on a html fashion through its integrated HTTP server or launch notification events when one log entry arrives
        from servers. 
         
        
        Architecture
        
        Broadly speaking we can think that this application have 2 layers. One of them is the main process omnilogd (daemon), 
        that launches, controls and communicate the second layer, the app runnable sub components (threading involved).
        
        
        The other components are wrappers around third party libraries .
        
        Key features
        
            See remote logs via SSH.
            Main SSH auth methods.
            Store logs in local folder for further analysis.
            Auto reload config when it changes.(No manual service restart needed)
            Built-in HTTP server for showing results.
        
        Installation
        
        If you have problems with dbus module, install it with:
        apt-get install python3-dbus
        
        
        From pypi install as:
        pip3 install omnilog
        
        
        You can create a skeleton , omnilog will write in your $HOME dir a example config, webpanel example and dir for
        received logs. Just write:
        
        omnilogd.py skeleton
        
        
        
        Use it
        
        omnilogd.py config.json
        
        
        Where config.json is the route to your configuration file. You can get an example of this in docs/config.dist.json.
        
        
        
        For further and more detailed documentation visit the docs subfolder. If you simply "want to use it" this README
        shoul be sufficient.
        
        
Platform: any
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Development Status :: 4 - Beta
Classifier: Natural Language :: English
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: License :: Freely Distributable
Classifier: Operating System :: POSIX :: Linux
Classifier: Topic :: System :: Logging
Classifier: Topic :: System :: Monitoring
