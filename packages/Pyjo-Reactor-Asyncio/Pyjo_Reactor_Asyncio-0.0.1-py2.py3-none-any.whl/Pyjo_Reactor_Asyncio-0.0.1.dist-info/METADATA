Metadata-Version: 2.0
Name: Pyjo-Reactor-Asyncio
Version: 0.0.1
Summary: Low level event reactor for Pyjoyment with asyncio support.
Home-page: http://github.com/dex4er/Pyjo-Reactor-Asyncio
Author: Piotr Roszatycki
Author-email: piotr.roszatycki@gmail.com
License: Artistic
Download-URL: https://github.com/dex4er/Pyjo-Reactor-Asyncio/archive/master.zip
Keywords: async asyncio mojo mojolicious pyjo pyjoyment reactor
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Artistic License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Requires-Dist: Pyjoyment
Requires-Dist: trollius; python_version < "3.0"
Requires-Dist: asyncio; python_version >= "3.0" and python_version < "3.4"

.. image:: https://img.shields.io/pypi/v/Pyjo-Reactor-Asyncio.png
   :target: https://pypi.python.org/pypi/Pyjo-Reactor-Asyncio
.. image:: https://travis-ci.org/dex4er/Pyjo-Reactor-Asyncio.png?branch=master
   :target: https://travis-ci.org/dex4er/Pyjo-Reactor-Asyncio
.. image:: https://readthedocs.org/projects/pyjo-reactor-asyncio/badge/?version=latest
   :target: http://pyjo-reactor-asyncio.readthedocs.org/en/latest/

Pyjo-Reactor-Asyncio
====================

Low level event reactor with asyncio support for Pyjoyment.


Pyjoyment
=========

An asynchronous, event driver web framework for the Python programming language.

Pyjoyment provides own reactor which handles I/O and timer events in its own
main event loop but it supports other loops, ie. *libev* or *asyncio*.

See http://www.pyjoyment.net/


asyncio
=======

This module provides infrastructure for writing single-threaded concurrent code
using coroutines, multiplexing I/O access over sockets and other resources,
running network clients and servers, and other related primitives.

The asyncio module was designed in PEP3156_. For a motivational primer on
transports and protocols, see PEP3153_.

See http://asyncio.org/


Trollius
========

Trollius is a portage of the asyncio project (PEP3156_) on Python 2.
Trollius works on Python 2.6-3.5.

See https://trollius.readthedocs.org/


.. _PEP3153: https://www.python.org/dev/peps/pep-3153/
.. _PEP3156: https://www.python.org/dev/peps/pep-3156/


