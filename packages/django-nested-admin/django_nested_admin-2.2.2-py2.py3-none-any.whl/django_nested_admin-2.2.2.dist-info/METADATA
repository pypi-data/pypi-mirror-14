Metadata-Version: 2.0
Name: django-nested-admin
Version: 2.2.2
Summary: Django admin classes that allow for nested inlines
Home-page: https://github.com/theatlantic/django-nested-admin
Author: The Atlantic
Author-email: programmers@theatlantic.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Framework :: Django
Requires-Dist: six (>=1.7.0)

.. image:: https://travis-ci.org/theatlantic/django-nested-admin.svg?branch=master
    :target: https://travis-ci.org/theatlantic/django-nested-admin
    :alt: Build Status

**django-nested-admin** is a project that makes it possible to nest
admin inlines (that is, to define inlines on InlineModelAdmin classes).
compatible with Django 1.4-1.9 and Python versions 2.7 and 3.4. It works with
and without Grappelli. When Grappelli is not installed it adds Grappelli-like
drag-and-drop sorting functionality to Django inlines.

Installation
============

The recommended way to install django-nested-admin is from
`PyPI <https://pypi.python.org/pypi/django-nested-admin>`_::

        pip install django-nested-admin

Alternatively, one can install a development copy of django-nested-admin
from source::

        pip install -e git+git://github.com/theatlantic/django-nested-admin.git#egg=django-nested-admin

If the source is already checked out, use setuptools to install::

        python setup.py develop

Configuration
=============

To use django-nested-admin in your project, ``"nested_admin"`` must be added
to the ``INSTALLED_APPS`` in your settings and you must include
``nested_admin.urls`` in your django urlpatterns. `django-grappelli
<https://github.com/sehmaschine/django-grappelli>`_ is an optional dependency
of django-nested-admin. If using Grappelli, make sure the `appropriate version
<http://django-grappelli.readthedocs.org/en/latest/#versions>`_ of Grappelli
is installed for your version of Django.

.. code-block:: python

    # settings.py

    INSTALLED_APPS = (
        # ...
        'nested_admin',
    )

    # urls.py

    urlpatterns = patterns('',
        # ...
        url(r'^nested_admin/', include('nested_admin.urls')),
    )

Example Usage
=============

In order to use ``django-nested-admin``, use the following classes in
place of their django admin equivalents:

========================  ======================
**django.contrib.admin**  **nested_admin**      
------------------------  ----------------------
ModelAdmin                NestedModelAdmin           
InlineModelAdmin          NestedInlineModelAdmin
StackedInline             NestedStackedInline   
TabularInline             NestedTabularInline
========================  ======================

Note: for consistency with the other class names, ``NestedAdmin`` was
deprecated in favor of ``NestedModelAdmin`` in 2.2.1, and will be removed in
version 2.3.

.. code-block:: python

    # An example admin.py for a Table of Contents app

    from django.contrib import admin
    import nested_admin

    from .models import TableOfContents, TocArticle, TocSection

    class TocArticleInline(nested_admin.NestedStackedInline):
        model = TocArticle
        sortable_field_name = "position"

    class TocSectionInline(nested_admin.NestedStackedInline):
        model = TocSection
        sortable_field_name = "position"
        inlines = [TocArticleInline]

    class TableOfContentsAdmin(nested_admin.NestedModelAdmin):
        inlines = [TocSectionInline]

    admin.site.register(TableOfContents, TableOfContentsAdmin)

License
=======

The django code is licensed under the `Simplified BSD
License <http://opensource.org/licenses/BSD-2-Clause>`_. View the
``LICENSE`` file under the root directory for complete license and
copyright information.


