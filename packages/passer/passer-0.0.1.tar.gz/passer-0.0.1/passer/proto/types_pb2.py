# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/types.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto/types.proto',
  package='',
  serialized_pb=_b('\n\x11proto/types.proto\"-\n\x1aIncompleteRequestException\x12\x0f\n\x07message\x18\x01 \x01(\t\"\'\n\tTHostPort\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\".\n\x14TPlacementPreference\x12\x16\n\x0e\x64\x65layThreshold\x18\x03 \x01(\x05\"0\n\x0fTResourceVector\x12\x0e\n\x06memory\x18\x01 \x01(\x03\x12\r\n\x05\x63ores\x18\x02 \x01(\x05\"e\n\x0bTFullTaskId\x12\x0e\n\x06taskId\x18\x01 \x01(\t\x12\x11\n\trequestId\x18\x02 \x01(\t\x12\r\n\x05\x61ppId\x18\x03 \x01(\t\x12$\n\x10schedulerAddress\x18\x04 \x01(\x0b\x32\n.THostPort\"?\n\x0eTUserGroupInfo\x12\x0c\n\x04user\x18\x01 \x01(\t\x12\r\n\x05group\x18\x02 \x01(\t\x12\x10\n\x08priority\x18\x03 \x01(\x05\"W\n\tTTaskSpec\x12\x0e\n\x06taskId\x18\x01 \x01(\t\x12)\n\npreference\x18\x02 \x01(\x0b\x32\x15.TPlacementPreference\x12\x0f\n\x07message\x18\x03 \x01(\x0c\"i\n\x12TSchedulingRequest\x12\x0b\n\x03\x61pp\x18\x01 \x01(\t\x12\x1d\n\x04user\x18\x03 \x01(\x0b\x32\x0f.TUserGroupInfo\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x12\n\nprobeRatio\x18\x05 \x01(\x01\"\x9a\x01\n\x1fTEnqueueTaskReservationsRequest\x12\r\n\x05\x61ppId\x18\x01 \x01(\t\x12\x1d\n\x04user\x18\x02 \x01(\x0b\x32\x0f.TUserGroupInfo\x12\x11\n\trequestId\x18\x03 \x01(\t\x12$\n\x10schedulerAddress\x18\x04 \x01(\x0b\x32\n.THostPort\x12\x10\n\x08numTasks\x18\x05 \x01(\x05\"3\n\x1eTCancelTaskReservationsRequest\x12\x11\n\trequestId\x18\x01 \x01(\t\"2\n\x0fTTaskLaunchSpec\x12\x0e\n\x06taskId\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\x0c\"\x18\n\x08LoadSpec\x12\x0c\n\x04load\x18\x01 \x01(\x01\"]\n\nTNodeState\x12&\n\x0csparrowUsage\x18\x01 \x01(\x0b\x32\x10.TResourceVector\x12\'\n\rexternalUsage\x18\x02 \x01(\x0b\x32\x10.TResourceVector')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_INCOMPLETEREQUESTEXCEPTION = _descriptor.Descriptor(
  name='IncompleteRequestException',
  full_name='IncompleteRequestException',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='IncompleteRequestException.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=66,
)


_THOSTPORT = _descriptor.Descriptor(
  name='THostPort',
  full_name='THostPort',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='host', full_name='THostPort.host', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='THostPort.port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=68,
  serialized_end=107,
)


_TPLACEMENTPREFERENCE = _descriptor.Descriptor(
  name='TPlacementPreference',
  full_name='TPlacementPreference',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='delayThreshold', full_name='TPlacementPreference.delayThreshold', index=0,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=109,
  serialized_end=155,
)


_TRESOURCEVECTOR = _descriptor.Descriptor(
  name='TResourceVector',
  full_name='TResourceVector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='memory', full_name='TResourceVector.memory', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cores', full_name='TResourceVector.cores', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=157,
  serialized_end=205,
)


_TFULLTASKID = _descriptor.Descriptor(
  name='TFullTaskId',
  full_name='TFullTaskId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='taskId', full_name='TFullTaskId.taskId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='requestId', full_name='TFullTaskId.requestId', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='appId', full_name='TFullTaskId.appId', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='schedulerAddress', full_name='TFullTaskId.schedulerAddress', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=207,
  serialized_end=308,
)


_TUSERGROUPINFO = _descriptor.Descriptor(
  name='TUserGroupInfo',
  full_name='TUserGroupInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user', full_name='TUserGroupInfo.user', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='group', full_name='TUserGroupInfo.group', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='priority', full_name='TUserGroupInfo.priority', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=310,
  serialized_end=373,
)


_TTASKSPEC = _descriptor.Descriptor(
  name='TTaskSpec',
  full_name='TTaskSpec',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='taskId', full_name='TTaskSpec.taskId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='preference', full_name='TTaskSpec.preference', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='TTaskSpec.message', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=375,
  serialized_end=462,
)


_TSCHEDULINGREQUEST = _descriptor.Descriptor(
  name='TSchedulingRequest',
  full_name='TSchedulingRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='app', full_name='TSchedulingRequest.app', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user', full_name='TSchedulingRequest.user', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='TSchedulingRequest.description', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='probeRatio', full_name='TSchedulingRequest.probeRatio', index=3,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=464,
  serialized_end=569,
)


_TENQUEUETASKRESERVATIONSREQUEST = _descriptor.Descriptor(
  name='TEnqueueTaskReservationsRequest',
  full_name='TEnqueueTaskReservationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='appId', full_name='TEnqueueTaskReservationsRequest.appId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user', full_name='TEnqueueTaskReservationsRequest.user', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='requestId', full_name='TEnqueueTaskReservationsRequest.requestId', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='schedulerAddress', full_name='TEnqueueTaskReservationsRequest.schedulerAddress', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='numTasks', full_name='TEnqueueTaskReservationsRequest.numTasks', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=572,
  serialized_end=726,
)


_TCANCELTASKRESERVATIONSREQUEST = _descriptor.Descriptor(
  name='TCancelTaskReservationsRequest',
  full_name='TCancelTaskReservationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requestId', full_name='TCancelTaskReservationsRequest.requestId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=728,
  serialized_end=779,
)


_TTASKLAUNCHSPEC = _descriptor.Descriptor(
  name='TTaskLaunchSpec',
  full_name='TTaskLaunchSpec',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='taskId', full_name='TTaskLaunchSpec.taskId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='TTaskLaunchSpec.message', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=781,
  serialized_end=831,
)


_LOADSPEC = _descriptor.Descriptor(
  name='LoadSpec',
  full_name='LoadSpec',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='load', full_name='LoadSpec.load', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=833,
  serialized_end=857,
)


_TNODESTATE = _descriptor.Descriptor(
  name='TNodeState',
  full_name='TNodeState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sparrowUsage', full_name='TNodeState.sparrowUsage', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='externalUsage', full_name='TNodeState.externalUsage', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=859,
  serialized_end=952,
)

_TFULLTASKID.fields_by_name['schedulerAddress'].message_type = _THOSTPORT
_TTASKSPEC.fields_by_name['preference'].message_type = _TPLACEMENTPREFERENCE
_TSCHEDULINGREQUEST.fields_by_name['user'].message_type = _TUSERGROUPINFO
_TENQUEUETASKRESERVATIONSREQUEST.fields_by_name['user'].message_type = _TUSERGROUPINFO
_TENQUEUETASKRESERVATIONSREQUEST.fields_by_name['schedulerAddress'].message_type = _THOSTPORT
_TNODESTATE.fields_by_name['sparrowUsage'].message_type = _TRESOURCEVECTOR
_TNODESTATE.fields_by_name['externalUsage'].message_type = _TRESOURCEVECTOR
DESCRIPTOR.message_types_by_name['IncompleteRequestException'] = _INCOMPLETEREQUESTEXCEPTION
DESCRIPTOR.message_types_by_name['THostPort'] = _THOSTPORT
DESCRIPTOR.message_types_by_name['TPlacementPreference'] = _TPLACEMENTPREFERENCE
DESCRIPTOR.message_types_by_name['TResourceVector'] = _TRESOURCEVECTOR
DESCRIPTOR.message_types_by_name['TFullTaskId'] = _TFULLTASKID
DESCRIPTOR.message_types_by_name['TUserGroupInfo'] = _TUSERGROUPINFO
DESCRIPTOR.message_types_by_name['TTaskSpec'] = _TTASKSPEC
DESCRIPTOR.message_types_by_name['TSchedulingRequest'] = _TSCHEDULINGREQUEST
DESCRIPTOR.message_types_by_name['TEnqueueTaskReservationsRequest'] = _TENQUEUETASKRESERVATIONSREQUEST
DESCRIPTOR.message_types_by_name['TCancelTaskReservationsRequest'] = _TCANCELTASKRESERVATIONSREQUEST
DESCRIPTOR.message_types_by_name['TTaskLaunchSpec'] = _TTASKLAUNCHSPEC
DESCRIPTOR.message_types_by_name['LoadSpec'] = _LOADSPEC
DESCRIPTOR.message_types_by_name['TNodeState'] = _TNODESTATE

IncompleteRequestException = _reflection.GeneratedProtocolMessageType('IncompleteRequestException', (_message.Message,), dict(
  DESCRIPTOR = _INCOMPLETEREQUESTEXCEPTION,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:IncompleteRequestException)
  ))
_sym_db.RegisterMessage(IncompleteRequestException)

THostPort = _reflection.GeneratedProtocolMessageType('THostPort', (_message.Message,), dict(
  DESCRIPTOR = _THOSTPORT,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:THostPort)
  ))
_sym_db.RegisterMessage(THostPort)

TPlacementPreference = _reflection.GeneratedProtocolMessageType('TPlacementPreference', (_message.Message,), dict(
  DESCRIPTOR = _TPLACEMENTPREFERENCE,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:TPlacementPreference)
  ))
_sym_db.RegisterMessage(TPlacementPreference)

TResourceVector = _reflection.GeneratedProtocolMessageType('TResourceVector', (_message.Message,), dict(
  DESCRIPTOR = _TRESOURCEVECTOR,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:TResourceVector)
  ))
_sym_db.RegisterMessage(TResourceVector)

TFullTaskId = _reflection.GeneratedProtocolMessageType('TFullTaskId', (_message.Message,), dict(
  DESCRIPTOR = _TFULLTASKID,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:TFullTaskId)
  ))
_sym_db.RegisterMessage(TFullTaskId)

TUserGroupInfo = _reflection.GeneratedProtocolMessageType('TUserGroupInfo', (_message.Message,), dict(
  DESCRIPTOR = _TUSERGROUPINFO,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:TUserGroupInfo)
  ))
_sym_db.RegisterMessage(TUserGroupInfo)

TTaskSpec = _reflection.GeneratedProtocolMessageType('TTaskSpec', (_message.Message,), dict(
  DESCRIPTOR = _TTASKSPEC,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:TTaskSpec)
  ))
_sym_db.RegisterMessage(TTaskSpec)

TSchedulingRequest = _reflection.GeneratedProtocolMessageType('TSchedulingRequest', (_message.Message,), dict(
  DESCRIPTOR = _TSCHEDULINGREQUEST,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:TSchedulingRequest)
  ))
_sym_db.RegisterMessage(TSchedulingRequest)

TEnqueueTaskReservationsRequest = _reflection.GeneratedProtocolMessageType('TEnqueueTaskReservationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _TENQUEUETASKRESERVATIONSREQUEST,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:TEnqueueTaskReservationsRequest)
  ))
_sym_db.RegisterMessage(TEnqueueTaskReservationsRequest)

TCancelTaskReservationsRequest = _reflection.GeneratedProtocolMessageType('TCancelTaskReservationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _TCANCELTASKRESERVATIONSREQUEST,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:TCancelTaskReservationsRequest)
  ))
_sym_db.RegisterMessage(TCancelTaskReservationsRequest)

TTaskLaunchSpec = _reflection.GeneratedProtocolMessageType('TTaskLaunchSpec', (_message.Message,), dict(
  DESCRIPTOR = _TTASKLAUNCHSPEC,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:TTaskLaunchSpec)
  ))
_sym_db.RegisterMessage(TTaskLaunchSpec)

LoadSpec = _reflection.GeneratedProtocolMessageType('LoadSpec', (_message.Message,), dict(
  DESCRIPTOR = _LOADSPEC,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:LoadSpec)
  ))
_sym_db.RegisterMessage(LoadSpec)

TNodeState = _reflection.GeneratedProtocolMessageType('TNodeState', (_message.Message,), dict(
  DESCRIPTOR = _TNODESTATE,
  __module__ = 'proto.types_pb2'
  # @@protoc_insertion_point(class_scope:TNodeState)
  ))
_sym_db.RegisterMessage(TNodeState)


# @@protoc_insertion_point(module_scope)
