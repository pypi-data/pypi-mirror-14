Metadata-Version: 1.1
Name: discreteMarkovChain
Version: 0.1
Summary: Solve Markov chains with a discrete state space.
Home-page: https://github.com/gvanderheide/discreteMarkovChain
Author: Gerlach van der Heide
Author-email: g.van.der.heide@rug.nl
License: MIT
Description: discreteMarkovChain
        =======================
        This Python module based on numpy/scipy calculates the steady state distribution of a Markov chain with a discrete state space. Markov chains with several million states can be solved. 
        The module introduces the `markovChain` class which has the following features. 
        
        * States in the state space can be integers or integer vectors (1d numpy arrays). 
        * The Markov chain can be a continous time Markov chains (CTMC) as well as discrete time Markov chains (DTMC). 
        * At the moment, four different methods for calculating steady state distributions are included: 
           * The power method,
           * Linear algebra solver,
           * The first left eigenvector, 
           * Krylov subspace method.
        * There are two alternative methods for obtaining the generator/transition matrix of the Markov chain: a direct and an indirect method.
           * Both methods require the user to specify a transition function. 
           * The indirect method requires only an initial state. 
             * By repeatedly calling the transition function on unvisited states, reachable states are determined automatically. 
             * The generator matrix is built up on the fly.
           * The direct method requires a function that gives the state space on beforehand. 
             * States are translated into unique codes that can be used to identify reachable states. 
             * This has some computational and memory advantages for vector states.
        * Memory consumption is reduced by using sparse matrices. 
        * Checks are included to see whether all states in the Markov chain are connected.
Keywords: Markov chain stochastic stationary steady-state
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/ResearchTopic :: Scientific/Engineering :: Mathematics
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.5
