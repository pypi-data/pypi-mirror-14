<!DOCTYPE html>
<meta charset="utf-8">
<style>

circle {
  fill-opacity: .6;
  stroke-width: 0px;
}

.leaf circle {
  fill-opacity: 1;
}

text {
  font: 10px sans-serif;
}

</style>
<body>
<p>colorscheme: {{colorscheme}}</p>
<script type="text/javascript" src="d3.js"></script>
<script type="text/javascript" src="colorbrewer.js"></script>
<script>

var diameter = 500,
    format = d3.format(",d")

var width = diameter;
var height = diameter;
    
var pack = d3.layout.pack()
    .size([diameter - 4, diameter - 4])
    .value(function(d) { return d.size; });

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(2,2)");
    
svg.append("rect")
    .attr('width','100%')
    .attr('height','100%')
    .attr('fill','{{bgcolor}}')

var paths= []

function extractPath(key,value) {
    if (key === 'name') {
        paths.push(value)
    }
}

function getPaths(obj) {
    for (var i in obj) {
        extractPath.apply(this,[i,obj[i]]) 
        if (obj[i] !== null && typeof obj[i]=="object") {
                for (var j in obj[i]) {
                    getPaths(obj[i][j])
                }
        }
    }
}
    
d3.json("tout.json", function(error, root) {
  if (error) throw error;
    getPaths(root)
    var colorschemes = colorbrewer.{{colorscheme}}
    var nschemes = Object.keys(colorschemes).length
    if ( paths.length < Object.keys(colorschemes)[0] ) {
        color_array = colorschemes[ Object.keys(colorschemes)[0] ]
    } else if (paths.length > nschemes  ) {
        color_array = colorschemes[ nschemes-1 ]
    } else {
        color_array = colorschemes[ paths.length-1 ]
    }
    var color = d3.scale.ordinal()
          .domain(paths)
          .range(color_array)


  var node = svg.datum(root).selectAll(".node")
      .data(pack.nodes)
    .enter().append("g")
      .attr("class", function(d) { return d.children ? "node" : "leaf node"; })
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

  node.append("circle")
      .attr("r", function(d) { return d.r; })
      .style("fill", function(d) { return color(d.path); });  // could also be d.depth or d.name
      
  node.append("title")
      .text(function(d) { txt = d.name.replace(/_slash_/g,"/")
									    .replace(/_dot_/g,".")
										.replace(/_dash_/g,"-");
							return txt; });
      
{{#has_title}}
    svg.append("text")
    .attr('x',width/2)
    .attr('y',height/2)
    .attr('pointer-events', 'none')
    .attr('text-anchor','middle')
    .attr('text-decoration','bold')
    .attr('font-size','{{font_size}}')
    .attr('font-family','{{font_family}}')
    .attr('fill','{{title_color}}')
    .text("{{title}}")
{{/has_title}}
});

d3.select(self.frameElement).style("height", diameter + "px");

</script>
</body>
</html>