# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft and contributors.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ServiceBusBrokeredMessageProperties(Model):
    """ServiceBusBrokeredMessageProperties

    :param str content_type: Gets or sets the content type.
    :param str correlation_id: Gets or sets the correlation id.
    :param bool force_persistence: Gets or sets the force persistence.
    :param str label: Gets or sets the label.
    :param str message_id: Gets or sets the message id.
    :param str partition_key: Gets or sets the partition key.
    :param str reply_to: Gets or sets the reply to.
    :param str reply_to_session_id: Gets or sets the reply to session id.
    :param datetime scheduled_enqueue_time_utc: Gets or sets the scheduled
     enqueue time UTC.
    :param str session_id: Gets or sets the session id.
    :param datetime time_to_live: Gets or sets the time to live.
    :param str to: Gets or sets the to.
    :param str via_partition_key: Gets or sets the via partition key.
    """ 

    _attribute_map = {
        'content_type': {'key': 'contentType', 'type': 'str'},
        'correlation_id': {'key': 'correlationId', 'type': 'str'},
        'force_persistence': {'key': 'forcePersistence', 'type': 'bool'},
        'label': {'key': 'label', 'type': 'str'},
        'message_id': {'key': 'messageId', 'type': 'str'},
        'partition_key': {'key': 'partitionKey', 'type': 'str'},
        'reply_to': {'key': 'replyTo', 'type': 'str'},
        'reply_to_session_id': {'key': 'replyToSessionId', 'type': 'str'},
        'scheduled_enqueue_time_utc': {'key': 'scheduledEnqueueTimeUtc', 'type': 'iso-8601'},
        'session_id': {'key': 'sessionId', 'type': 'str'},
        'time_to_live': {'key': 'timeToLive', 'type': 'iso-8601'},
        'to': {'key': 'to', 'type': 'str'},
        'via_partition_key': {'key': 'viaPartitionKey', 'type': 'str'},
    }

    def __init__(self, content_type=None, correlation_id=None, force_persistence=None, label=None, message_id=None, partition_key=None, reply_to=None, reply_to_session_id=None, scheduled_enqueue_time_utc=None, session_id=None, time_to_live=None, to=None, via_partition_key=None, **kwargs):
        self.content_type = content_type
        self.correlation_id = correlation_id
        self.force_persistence = force_persistence
        self.label = label
        self.message_id = message_id
        self.partition_key = partition_key
        self.reply_to = reply_to
        self.reply_to_session_id = reply_to_session_id
        self.scheduled_enqueue_time_utc = scheduled_enqueue_time_utc
        self.session_id = session_id
        self.time_to_live = time_to_live
        self.to = to
        self.via_partition_key = via_partition_key
