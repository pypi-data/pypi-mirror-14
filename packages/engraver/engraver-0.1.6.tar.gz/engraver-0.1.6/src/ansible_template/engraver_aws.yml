---
# File automatically generated by Engraver.
# DO NOT MODIFY.

- hosts: localhost
  remote_user: "{{ remote_user }}"
  become_method: sudo
  vars_files:
    - "group_vars/{{ onyx_cluster_id }}.yml"
  vars:
    - create_vpc: yes
  roles:
    - aws

% for s in services.keys():
- hosts: localhost
  remote_user: "{{ remote_user }}"
  become_method: sudo
  vars_files:
    - "group_vars/{{ onyx_cluster_id }}.yml"
    - "roles/${ s }/defaults/main.yml"
  vars:
    - create_sgs: yes
    - service: ${ s}
  roles:
    - aws

% endfor
% for p in profiles:
- hosts: localhost
  remote_user: "{{ remote_user }}"
  become_method: sudo
  vars_files:
    - "group_vars/{{ onyx_cluster_id }}.yml"
    - "vars/cluster_vars/{{ onyx_cluster_id }}/machine_profiles/${ p }_profile.yml"
  vars:
    - create_ec2: yes
  roles:
    - aws

% endfor
- hosts: localhost
  remote_user: "{{ remote_user }}"
  become_method: sudo
  vars_files:
    - "group_vars/{{ onyx_cluster_id }}.yml"
  vars:
    - cache: yes
  roles:
    - aws

% for s in service_seq:
- hosts: ${ s }
  remote_user: "{{ remote_user }}"
  become_method: sudo
  vars_files:
    - "group_vars/{{ onyx_cluster_id }}.yml"
% for dep in service_graph.get(s):
    - "roles/${ dep }/defaults/main.yml"
% endfor
% for p in services.get(s):
    - "vars/cluster_vars/{{ onyx_cluster_id }}/machine_profiles/${ p }_profile.yml"
% endfor
  roles:
    - ${ s }

% endfor
- include: ${ cluster_id }_post.yml