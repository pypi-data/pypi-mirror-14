Metadata-Version: 2.0
Name: pybinding
Version: 0.7.2
Summary: Package for tight-binding calculations
Home-page: https://github.com/dean0x7d/pybinding
Author: Dean Moldovan
Author-email: dean0x7d@gmail.com
License: BSD
Keywords: pybinding tight-binding solid-state physics cmt
Platform: Unix
Platform: Windows
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: C++
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: Implementation :: CPython
Requires-Dist: matplotlib (>=1.5.0)
Requires-Dist: numpy (>=1.9.0)
Requires-Dist: py-cpuinfo (>=0.1.4)
Requires-Dist: pytest (>=2.8)
Requires-Dist: scipy (>=0.15)

Documentation: http://pybinding.site/

v0.7.2 | 2016-03-14

* Lots of improvements to the documentation. The tutorial pages can now be downloaded and run
  interactively as Jupyter notebooks. The entire user guide is also available as a PDF file.

* The `sub_id` and `hop_id` modifier arguments can now be compared directly with their friendly
  string names. For example, this makes it possible to write `sub_id == 'A'` instead of the old
  `sub_id == lattice['A']` and `hop_id == 'gamma1'` instead of `hop_id == lattice('gamma1')`.

* The site state modifier can automatically remove dangling sites which have less than a certain
  number of neighbors (set using the `min_neighbors` decorator argument).

* Added optional `sites` argument for state, position, and onsite energy modifiers.
  It can be used instead of the `x, y, z, sub_id` arguments and contains a few helper methods.
  See the modifier API reference for more information.

* Fixed a bug where using a single KPM object for multiple calculations could return wrong results.

* *Experimental* `hopping_generator` which can be used to add a new hopping family connecting
  arbitrary sites independent of the main `Lattice` definition. This is useful for creating 
  additional local hoppings, e.g. to model defects.



